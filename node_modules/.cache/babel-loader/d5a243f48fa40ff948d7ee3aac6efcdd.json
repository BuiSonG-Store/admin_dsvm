{"ast":null,"code":"var _jsxFileName = \"D:\\\\DacSanVungMienVN\\\\admin\\\\src\\\\components\\\\authentication\\\\login\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill'; // material\n\nimport { Link, Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { useDispatch } from 'react-redux';\nimport { userLogin } from '../../../store/slice/loginAndLogout';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { setSessionStorage } from '../../../utils/sessionStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nDate.prototype.addDays = function (days) {\n  const date = new Date(this.valueOf());\n  date.setDate(date.getDate() + days);\n  return date;\n}; // ----------------------------------------------------------------------\n\n\nexport default function LoginForm() {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const dispatch = useDispatch();\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().email('Email must be a valid email address').required('Email is required'),\n    password: Yup.string().required('Password is required').min(6).required('the password must be at least 6 characters')\n  });\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n\n      try {\n        const res = await dispatch(userLogin({\n          email: values.email,\n          password: values.password\n        }));\n        unwrapResult(res);\n        const user = res.payload;\n        setSessionStorage(user);\n        resetForm();\n        window.location.href = '/dashboard/app';\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n\n  const handleShowPassword = () => {\n    setShowPassword(show => !show);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"username\",\n          type: \"email\",\n          label: \"Email address\",\n          value: values.email,\n          ...getFieldProps('email'),\n          error: Boolean(touched.email && errors.email),\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"current-password\",\n          type: showPassword ? 'text' : 'password',\n          label: \"Password\",\n          value: values.password,\n          ...getFieldProps('password'),\n          InputProps: {\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: handleShowPassword,\n                edge: \"end\",\n                children: /*#__PURE__*/_jsxDEV(Icon, {\n                  icon: showPassword ? eyeFill : eyeOffFill\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 40\n            }, this)\n          },\n          error: Boolean(touched.password && errors.password),\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        sx: {\n          my: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Checkbox, { ...getFieldProps('remember'),\n            checked: values.remember\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 30\n          }, this),\n          label: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          component: RouterLink,\n          variant: \"subtitle2\",\n          to: \"#\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this);\n}\n\n_s(LoginForm, \"2pvT27fsZINT6EqGkksf7OzBPe0=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["D:/DacSanVungMienVN/admin/src/components/authentication/login/LoginForm.js"],"names":["Yup","useState","Link","RouterLink","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","LoadingButton","useDispatch","userLogin","unwrapResult","setSessionStorage","Date","prototype","addDays","days","date","valueOf","setDate","getDate","LoginForm","showPassword","setShowPassword","dispatch","LoginSchema","object","shape","email","string","required","password","min","formik","initialValues","remember","validationSchema","onSubmit","values","resetForm","res","user","payload","window","location","href","e","console","log","errors","touched","isSubmitting","handleSubmit","getFieldProps","handleShowPassword","show","Boolean","endAdornment","my"],"mappings":";;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,SAAQC,IAAI,IAAIC,UAAhB,QAAiC,kBAAjC;AACA,SAAQC,SAAR,EAAmBC,IAAnB,EAAyBC,cAAzB,QAA8C,QAA9C;AACA,SAAQC,IAAR,QAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAOC,UAAP,MAAuB,iCAAvB,C,CACA;;AACA,SACIP,IADJ,EACUQ,KADV,EACiBC,QADjB,EAC2BC,SAD3B,EACsCC,UADtC,EACkDC,cADlD,EACkEC,gBADlE,QAEO,eAFP;AAGA,SAAQC,aAAR,QAA4B,UAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,qCAAxB;AACA,SAAQC,YAAR,QAA2B,kBAA3B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;;;AAEAC,IAAI,CAACC,SAAL,CAAeC,OAAf,GAAyB,UAASC,IAAT,EAAe;AACpC,QAAMC,IAAI,GAAG,IAAIJ,IAAJ,CAAS,KAAKK,OAAL,EAAT,CAAb;AACAD,EAAAA,IAAI,CAACE,OAAL,CAAaF,IAAI,CAACG,OAAL,KAAiBJ,IAA9B;AACA,SAAOC,IAAP;AACH,CAJD,C,CAMA;;;AAEA,eAAe,SAASI,SAAT,GAAqB;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkC9B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM+B,QAAQ,GAAGf,WAAW,EAA5B;AAEA,QAAMgB,WAAW,GAAGjC,GAAG,CAACkC,MAAJ,GAAaC,KAAb,CAAmB;AACnCC,IAAAA,KAAK,EAAEpC,GAAG,CAACqC,MAAJ,GAAaD,KAAb,CAAmB,qCAAnB,EAA0DE,QAA1D,CAAmE,mBAAnE,CAD4B;AAEnCC,IAAAA,QAAQ,EAAEvC,GAAG,CAACqC,MAAJ,GAAaC,QAAb,CAAsB,sBAAtB,EAA8CE,GAA9C,CAAkD,CAAlD,EAAqDF,QAArD,CAA8D,4CAA9D;AAFyB,GAAnB,CAApB;AAKA,QAAMG,MAAM,GAAGrC,SAAS,CAAC;AACrBsC,IAAAA,aAAa,EAAE;AACXN,MAAAA,KAAK,EAAE,EADI;AACAG,MAAAA,QAAQ,EAAE,EADV;AACcI,MAAAA,QAAQ,EAAE;AADxB,KADM;AAIrBC,IAAAA,gBAAgB,EAAEX,WAJG;AAIUY,IAAAA,QAAQ,EAAE,OAAOC,MAAP,WAA+B;AAAA,UAAhB;AAACC,QAAAA;AAAD,OAAgB;;AACpE,UAAI;AACA,cAAMC,GAAG,GAAG,MAAMhB,QAAQ,CAACd,SAAS,CAAC;AACjCkB,UAAAA,KAAK,EAAEU,MAAM,CAACV,KADmB;AACZG,UAAAA,QAAQ,EAAEO,MAAM,CAACP;AADL,SAAD,CAAV,CAA1B;AAGApB,QAAAA,YAAY,CAAC6B,GAAD,CAAZ;AACA,cAAMC,IAAI,GAACD,GAAG,CAACE,OAAf;AACA9B,QAAAA,iBAAiB,CAAC6B,IAAD,CAAjB;AACAF,QAAAA,SAAS;AACTI,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,gBAArB;AACH,OATD,CASE,OAAOC,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;AAjBoB,GAAD,CAAxB;AAoBA,QAAM;AAACG,IAAAA,MAAD;AAASC,IAAAA,OAAT;AAAkBZ,IAAAA,MAAlB;AAA0Ba,IAAAA,YAA1B;AAAwCC,IAAAA,YAAxC;AAAsDC,IAAAA;AAAtD,MAAuEpB,MAA7E;;AAEA,QAAMqB,kBAAkB,GAAG,MAAM;AAC7B/B,IAAAA,eAAe,CAAEgC,IAAD,IAAU,CAACA,IAAZ,CAAf;AACH,GAFD;;AAIA,sBAAQ,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEtB,MAAvB;AAAA,2BACJ,QAAC,IAAD;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,UAAU,MAAnC;AAAoC,MAAA,QAAQ,EAAEmB,YAA9C;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,YAAY,EAAC,UAFjB;AAGI,UAAA,IAAI,EAAC,OAHT;AAII,UAAA,KAAK,EAAC,eAJV;AAKI,UAAA,KAAK,EAAEd,MAAM,CAACV,KALlB;AAAA,aAMQyB,aAAa,CAAC,OAAD,CANrB;AAOI,UAAA,KAAK,EAAEG,OAAO,CAACN,OAAO,CAACtB,KAAR,IAAiBqB,MAAM,CAACrB,KAAzB,CAPlB;AAQI,UAAA,UAAU,EAAEsB,OAAO,CAACtB,KAAR,IAAiBqB,MAAM,CAACrB;AARxC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAYI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,YAAY,EAAC,kBAFjB;AAGI,UAAA,IAAI,EAAEN,YAAY,GAAG,MAAH,GAAY,UAHlC;AAII,UAAA,KAAK,EAAC,UAJV;AAKI,UAAA,KAAK,EAAEgB,MAAM,CAACP,QALlB;AAAA,aAMQsB,aAAa,CAAC,UAAD,CANrB;AAOI,UAAA,UAAU,EAAE;AACRI,YAAAA,YAAY,eAAG,QAAC,cAAD;AAAgB,cAAA,QAAQ,EAAC,KAAzB;AAAA,qCACX,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAEH,kBAArB;AAAyC,gBAAA,IAAI,EAAC,KAA9C;AAAA,uCACI,QAAC,IAAD;AAAM,kBAAA,IAAI,EAAEhC,YAAY,GAAGtB,OAAH,GAAaC;AAArC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADW;AAAA;AAAA;AAAA;AAAA;AADP,WAPhB;AAcI,UAAA,KAAK,EAAEuD,OAAO,CAACN,OAAO,CAACnB,QAAR,IAAoBkB,MAAM,CAAClB,QAA5B,CAdlB;AAeI,UAAA,UAAU,EAAEmB,OAAO,CAACnB,QAAR,IAAoBkB,MAAM,CAAClB;AAf3C;AAAA;AAAA;AAAA;AAAA,gBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAgCI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,KAAjB;AAAuB,QAAA,UAAU,EAAC,QAAlC;AAA2C,QAAA,cAAc,EAAC,eAA1D;AAA0E,QAAA,EAAE,EAAE;AAAC2B,UAAAA,EAAE,EAAE;AAAL,SAA9E;AAAA,gCACI,QAAC,gBAAD;AACI,UAAA,OAAO,eAAE,QAAC,QAAD,OAAcL,aAAa,CAAC,UAAD,CAA3B;AAAyC,YAAA,OAAO,EAAEf,MAAM,CAACH;AAAzD;AAAA;AAAA;AAAA;AAAA,kBADb;AAEI,UAAA,KAAK,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,IAAD;AAAM,UAAA,SAAS,EAAExC,UAAjB;AAA6B,UAAA,OAAO,EAAC,WAArC;AAAiD,UAAA,EAAE,EAAC,GAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhCJ,eA2CI,QAAC,aAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,OAAO,EAAC,WAJZ;AAKI,QAAA,OAAO,EAAEwD,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA3CJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,UAAR;AAuDH;;GA1FuB9B,S;UAEHZ,W,EAOFb,S;;;KATKyB,S","sourcesContent":["import * as Yup from 'yup';\r\nimport {useState} from 'react';\r\nimport {Link as RouterLink} from 'react-router-dom';\r\nimport {useFormik, Form, FormikProvider} from 'formik';\r\nimport {Icon} from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\r\n// material\r\nimport {\r\n    Link, Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel\r\n} from '@mui/material';\r\nimport {LoadingButton} from '@mui/lab';\r\nimport {useDispatch} from 'react-redux';\r\nimport {userLogin} from '../../../store/slice/loginAndLogout';\r\nimport {unwrapResult} from '@reduxjs/toolkit';\r\nimport {setSessionStorage} from '../../../utils/sessionStorage';\r\n\r\nDate.prototype.addDays = function(days) {\r\n    const date = new Date(this.valueOf());\r\n    date.setDate(date.getDate() + days);\r\n    return date;\r\n};\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LoginForm() {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const dispatch = useDispatch();\r\n\r\n    const LoginSchema = Yup.object().shape({\r\n        email: Yup.string().email('Email must be a valid email address').required('Email is required'),\r\n        password: Yup.string().required('Password is required').min(6).required('the password must be at least 6 characters')\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '', password: '', remember: true\r\n        },\r\n        validationSchema: LoginSchema, onSubmit: async (values, {resetForm}) => {\r\n            try {\r\n                const res = await dispatch(userLogin({\r\n                    email: values.email, password: values.password\r\n                }));\r\n                unwrapResult(res);\r\n                const user=res.payload;\r\n                setSessionStorage(user);\r\n                resetForm();\r\n                window.location.href='/dashboard/app';\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    const {errors, touched, values, isSubmitting, handleSubmit, getFieldProps} = formik;\r\n\r\n    const handleShowPassword = () => {\r\n        setShowPassword((show) => !show);\r\n    };\r\n\r\n    return (<FormikProvider value={formik}>\r\n        <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\r\n            <Stack spacing={3}>\r\n                <TextField\r\n                    fullWidth\r\n                    autoComplete=\"username\"\r\n                    type=\"email\"\r\n                    label=\"Email address\"\r\n                    value={values.email}\r\n                    {...getFieldProps('email')}\r\n                    error={Boolean(touched.email && errors.email)}\r\n                    helperText={touched.email && errors.email}\r\n                />\r\n\r\n                <TextField\r\n                    fullWidth\r\n                    autoComplete=\"current-password\"\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    label=\"Password\"\r\n                    value={values.password}\r\n                    {...getFieldProps('password')}\r\n                    InputProps={{\r\n                        endAdornment: (<InputAdornment position=\"end\">\r\n                            <IconButton onClick={handleShowPassword} edge=\"end\">\r\n                                <Icon icon={showPassword ? eyeFill : eyeOffFill}/>\r\n                            </IconButton>\r\n                        </InputAdornment>)\r\n                    }}\r\n                    error={Boolean(touched.password && errors.password)}\r\n                    helperText={touched.password && errors.password}\r\n                />\r\n            </Stack>\r\n\r\n            <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{my: 2}}>\r\n                <FormControlLabel\r\n                    control={<Checkbox {...getFieldProps('remember')} checked={values.remember}/>}\r\n                    label=\"Remember me\"\r\n                />\r\n\r\n                <Link component={RouterLink} variant=\"subtitle2\" to=\"#\">\r\n                    Forgot password?\r\n                </Link>\r\n            </Stack>\r\n\r\n            <LoadingButton\r\n                fullWidth\r\n                size=\"large\"\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                loading={isSubmitting}\r\n            >\r\n                Login\r\n            </LoadingButton>\r\n        </Form>\r\n    </FormikProvider>);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}