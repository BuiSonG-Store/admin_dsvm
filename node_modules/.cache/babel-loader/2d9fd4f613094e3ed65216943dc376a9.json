{"ast":null,"code":"var _jsxFileName = \"D:\\\\DacSanVungMienVN\\\\admin\\\\src\\\\components\\\\_dashboard\\\\app\\\\AppTasks.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik'; // material\n\nimport { Box, Card, Checkbox, CardHeader, Typography, FormControlLabel, Stack } from '@mui/material'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TASKS = ['Create FireStone Logo', 'Add SCSS and JS files if required', 'Stakeholder Meeting', 'Scoping & Estimations', 'Sprint Showcase']; // ----------------------------------------------------------------------\n\nTaskItem.propTypes = {\n  task: PropTypes.string,\n  checked: PropTypes.bool,\n  formik: PropTypes.object\n};\n\nfunction TaskItem(_ref) {\n  let {\n    task,\n    checked,\n    formik,\n    ...other\n  } = _ref;\n  const {\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    direction: \"row\",\n    justifyContent: \"space-between\",\n    sx: {\n      py: 0.75\n    },\n    children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, { ...getFieldProps('checked'),\n        value: task,\n        checked: checked,\n        ...other\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this),\n      label: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: { ...(checked && {\n            color: 'text.disabled',\n            textDecoration: 'line-through'\n          })\n        },\n        children: task\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_c = TaskItem;\nexport default function AppTasks() {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      checked: [TASKS[2]]\n    },\n    onSubmit: values => {\n      console.log(values);\n    }\n  });\n  const {\n    values,\n    handleSubmit\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 3,\n        py: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(FormikProvider, {\n        value: formik,\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          autoComplete: \"off\",\n          noValidate: true,\n          onSubmit: handleSubmit,\n          children: TASKS.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: task,\n            formik: formik,\n            checked: values.checked.includes(task)\n          }, task, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppTasks, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c2 = AppTasks;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TaskItem\");\n$RefreshReg$(_c2, \"AppTasks\");","map":{"version":3,"sources":["D:/DacSanVungMienVN/admin/src/components/_dashboard/app/AppTasks.js"],"names":["PropTypes","Form","FormikProvider","useFormik","Box","Card","Checkbox","CardHeader","Typography","FormControlLabel","Stack","TASKS","TaskItem","propTypes","task","string","checked","bool","formik","object","other","getFieldProps","py","color","textDecoration","AppTasks","initialValues","onSubmit","values","console","log","handleSubmit","px","map","includes"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport {\r\n    Box,\r\n    Card,\r\n    Checkbox,\r\n    CardHeader,\r\n    Typography,\r\n    FormControlLabel,\r\n    Stack\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TASKS = [\r\n    'Create FireStone Logo',\r\n    'Add SCSS and JS files if required',\r\n    'Stakeholder Meeting',\r\n    'Scoping & Estimations',\r\n    'Sprint Showcase'\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTaskItem.propTypes = {\r\n    task: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    formik: PropTypes.object\r\n};\r\n\r\nfunction TaskItem({ task, checked, formik, ...other }) {\r\n    const { getFieldProps } = formik;\r\n\r\n    return (\r\n        <Stack direction='row' justifyContent='space-between' sx={{ py: 0.75 }}>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox {...getFieldProps('checked')} value={task} checked={checked} {...other} />\r\n                }\r\n                label={\r\n                    <Typography\r\n                        variant='body2'\r\n                        sx={{\r\n                            ...(checked && {\r\n                                color: 'text.disabled',\r\n                                textDecoration: 'line-through'\r\n                            })\r\n                        }}\r\n                    >\r\n                        {task}\r\n                    </Typography>\r\n                }\r\n            />\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default function AppTasks() {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            checked: [TASKS[2]]\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n        }\r\n    });\r\n\r\n    const { values, handleSubmit } = formik;\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader title='Tasks' />\r\n            <Box sx={{ px: 3, py: 1 }}>\r\n                <FormikProvider value={formik}>\r\n                    <Form autoComplete='off' noValidate onSubmit={handleSubmit}>\r\n                        {TASKS.map((task) => (\r\n                            <TaskItem\r\n                                key={task}\r\n                                task={task}\r\n                                formik={formik}\r\n                                checked={values.checked.includes(task)}\r\n                            />\r\n                        ))}\r\n                    </Form>\r\n                </FormikProvider>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}