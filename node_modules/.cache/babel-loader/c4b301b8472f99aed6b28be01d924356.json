{"ast":null,"code":"var _jsxFileName = \"D:\\\\DacSanVungMienVN\\\\dacsanvungmien_frontent\\\\src\\\\components\\\\users\\\\CreateForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useFormik, Form, FormikProvider } from 'formik'; // material\n\nimport { Stack, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { editUser } from '../../store/slice/user';\nimport { userRegister } from '../../store/slice/register'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function CreateForm(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const userEdit = props.dataEdit;\n  const formValue = {\n    Name: userEdit ? userEdit.name : '',\n    AccountPassword: userEdit ? userEdit.accountPassword : '',\n    PhoneNumber: userEdit ? userEdit.phoneNumber : '',\n    Gmail: userEdit ? userEdit.gmail : ''\n  };\n  const initialValues = userEdit ? { ...formValue,\n    FaceBook: userEdit.facebook,\n    UserAddress: userEdit.userAddress\n  } : formValue;\n  const UserSchema = Yup.object().shape({\n    Name: Yup.string().required(),\n    AccountPassword: Yup.string().required(),\n    PhoneNumber: Yup.string().required().max(10),\n    UserAddress: Yup.string().required(),\n    Gmail: Yup.string().required().email()\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema: UserSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n\n      try {\n        const res = (await userEdit) ? dispatch(editUser({\n          id: userEdit.id,\n          name: values.Name,\n          accountPassword: values.AccountPassword,\n          phoneNumber: values.PhoneNumber,\n          userAddress: values.UserAddress,\n          facebook: values.FaceBook,\n          gmail: values.Gmail\n        })) : dispatch(userRegister({\n          name: values.Name,\n          accountPassword: values.AccountPassword,\n          phoneNumber: values.PhoneNumber,\n          gmail: values.Gmail\n        }));\n        unwrapResult(res);\n        props.handleSubmit(res);\n        resetForm();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"Name\",\n          type: \"text\",\n          label: \"Name\",\n          value: values.Name,\n          ...getFieldProps('Name'),\n          error: Boolean(touched.Name && errors.Name),\n          helperText: touched.Name && errors.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"AccountPassword\",\n          type: \"password\",\n          label: \"Password\",\n          value: values.AccountPassword,\n          ...getFieldProps('AccountPassword'),\n          error: Boolean(touched.AccountPassword && errors.AccountPassword),\n          helperText: touched.AccountPassword && errors.AccountPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"PhoneNumber\",\n          type: \"text\",\n          label: \"PhoneNumber\",\n          value: values.PhoneNumber,\n          ...getFieldProps('PhoneNumber'),\n          error: Boolean(touched.PhoneNumber && errors.PhoneNumber),\n          helperText: touched.PhoneNumber && errors.PhoneNumber\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), userEdit && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"UserAddress\",\n            type: \"text\",\n            label: \"Address\",\n            value: values.UserAddress,\n            ...getFieldProps('UserAddress'),\n            error: Boolean(touched.UserAddress && errors.UserAddress),\n            helperText: touched.UserAddress && errors.UserAddress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"FaceBook\",\n            type: \"text\",\n            label: \"FaceBook\",\n            value: values.FaceBook,\n            ...getFieldProps('FaceBook'),\n            error: Boolean(touched.FaceBook && errors.FaceBook),\n            helperText: touched.FaceBook && errors.FaceBook\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"Gmail\",\n          type: \"text\",\n          label: \"Gmail\",\n          value: values.Gmail,\n          ...getFieldProps('Gmail'),\n          error: Boolean(touched.Gmail && errors.Gmail),\n          helperText: touched.Gmail && errors.Gmail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateForm, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = CreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"sources":["D:/DacSanVungMienVN/dacsanvungmien_frontent/src/components/users/CreateForm.js"],"names":["Yup","useFormik","Form","FormikProvider","Stack","TextField","LoadingButton","unwrapResult","useDispatch","editUser","userRegister","CreateForm","props","dispatch","userEdit","dataEdit","formValue","Name","name","AccountPassword","accountPassword","PhoneNumber","phoneNumber","Gmail","gmail","initialValues","FaceBook","facebook","UserAddress","userAddress","UserSchema","object","shape","string","required","max","email","formik","validationSchema","onSubmit","values","resetForm","res","id","handleSubmit","e","console","log","errors","touched","isSubmitting","getFieldProps","Boolean"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport {\r\n    Stack,\r\n    TextField,\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport {editUser} from '../../store/slice/user';\r\nimport {userRegister} from '../../store/slice/register';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CreateForm(props) {\r\n    const dispatch=useDispatch();\r\n    const userEdit=props.dataEdit;\r\n    const formValue={\r\n        Name: userEdit?userEdit.name:'',\r\n        AccountPassword: userEdit?userEdit.accountPassword:'',\r\n        PhoneNumber: userEdit?userEdit.phoneNumber:'',\r\n        Gmail:userEdit?userEdit.gmail:'',\r\n    };\r\n\r\n    const initialValues=userEdit?{...formValue,FaceBook:userEdit.facebook,UserAddress: userEdit.userAddress}:formValue;\r\n\r\n    const UserSchema = Yup.object().shape({\r\n        Name: Yup.string().required(),\r\n        AccountPassword: Yup.string().required(),\r\n        PhoneNumber: Yup.string().required().max(10),\r\n        UserAddress: Yup.string().required(),\r\n        Gmail: Yup.string().required().email(),\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: UserSchema,\r\n        onSubmit: async (values,{resetForm}) => {\r\n            try {\r\n                const res = await userEdit ?\r\n                    dispatch(editUser({\r\n                        id:userEdit.id,\r\n                        name: values.Name,\r\n                        accountPassword: values.AccountPassword,\r\n                        phoneNumber: values.PhoneNumber,\r\n                        userAddress: values.UserAddress,\r\n                        facebook: values.FaceBook,\r\n                        gmail: values.Gmail,\r\n                    }))\r\n                    :dispatch(userRegister({\r\n                        name: values.Name,\r\n                        accountPassword: values.AccountPassword,\r\n                        phoneNumber: values.PhoneNumber,\r\n                        gmail: values.Gmail,\r\n                    }))\r\n                ;\r\n                unwrapResult(res);\r\n                props.handleSubmit(res);\r\n                resetForm();\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <Form autoComplete='off' noValidate onSubmit={handleSubmit}>\r\n                <Stack spacing={3}>\r\n                    <TextField\r\n                        fullWidth\r\n                        autoComplete='Name'\r\n                        type='text'\r\n                        label='Name'\r\n                        value={values.Name}\r\n                        {...getFieldProps('Name')}\r\n                        error={Boolean(touched.Name && errors.Name)}\r\n                        helperText={touched.Name && errors.Name}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        autoComplete='AccountPassword'\r\n                        type='password'\r\n                        label='Password'\r\n                        value={values.AccountPassword}\r\n                        {...getFieldProps('AccountPassword')}\r\n                        error={Boolean(touched.AccountPassword && errors.AccountPassword)}\r\n                        helperText={touched.AccountPassword && errors.AccountPassword}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        autoComplete='PhoneNumber'\r\n                        type='text'\r\n                        label='PhoneNumber'\r\n                        value={values.PhoneNumber}\r\n                        {...getFieldProps('PhoneNumber')}\r\n                        error={Boolean(touched.PhoneNumber && errors.PhoneNumber)}\r\n                        helperText={touched.PhoneNumber && errors.PhoneNumber}\r\n                    />\r\n\r\n                    {userEdit&&<><TextField\r\n                        fullWidth\r\n                        autoComplete='UserAddress'\r\n                        type='text'\r\n                        label='Address'\r\n                        value={values.UserAddress}\r\n                        {...getFieldProps('UserAddress')}\r\n                        error={Boolean(touched.UserAddress && errors.UserAddress)}\r\n                        helperText={touched.UserAddress && errors.UserAddress}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        autoComplete='FaceBook'\r\n                        type='text'\r\n                        label='FaceBook'\r\n                        value={values.FaceBook}\r\n                        {...getFieldProps('FaceBook')}\r\n                        error={Boolean(touched.FaceBook && errors.FaceBook)}\r\n                        helperText={touched.FaceBook && errors.FaceBook}\r\n                    /></>}\r\n                    <TextField\r\n                        fullWidth\r\n                        autoComplete='Gmail'\r\n                        type='text'\r\n                        label='Gmail'\r\n                        value={values.Gmail}\r\n                        {...getFieldProps('Gmail')}\r\n                        error={Boolean(touched.Gmail && errors.Gmail)}\r\n                        helperText={touched.Gmail && errors.Gmail}\r\n                    />\r\n                </Stack>\r\n\r\n                <LoadingButton\r\n                    fullWidth\r\n                    size='large'\r\n                    type='submit'\r\n                    variant='contained'\r\n                    loading={isSubmitting}\r\n                >\r\n                    Submit\r\n                </LoadingButton>\r\n            </Form>\r\n        </FormikProvider>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}