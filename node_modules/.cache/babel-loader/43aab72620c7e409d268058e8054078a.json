{"ast":null,"code":"import _objectSpread from\"C:/Users/SonBui/OneDrive/M\\xE1y t\\xEDnh/dacsanvungmien_frontent/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"C:/Users/SonBui/OneDrive/M\\xE1y t\\xEDnh/dacsanvungmien_frontent/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"task\",\"checked\",\"formik\"];import{Form,FormikProvider,useFormik}from'formik';// material\nimport{Box,Card,Checkbox,CardHeader,Typography,FormControlLabel,Stack}from'@mui/material';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TASKS=['Create FireStone Logo','Add SCSS and JS files if required','Stakeholder Meeting','Scoping & Estimations','Sprint Showcase'];// ----------------------------------------------------------------------\nfunction TaskItem(_ref){var task=_ref.task,checked=_ref.checked,formik=_ref.formik,other=_objectWithoutProperties(_ref,_excluded);var getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"space-between\",sx:{py:0.75},children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},getFieldProps('checked')),{},{value:task,checked:checked},other)),label:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:_objectSpread({},checked&&{color:'text.disabled',textDecoration:'line-through'}),children:task})})});}export default function AppTasks(){var formik=useFormik({initialValues:{checked:[TASKS[2]]},onSubmit:function onSubmit(values){console.log(values);}});var values=formik.values,handleSubmit=formik.handleSubmit;return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Tasks\"}),/*#__PURE__*/_jsx(Box,{sx:{px:3,py:1},children:/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:TASKS.map(function(task){return/*#__PURE__*/_jsx(TaskItem,{task:task,formik:formik,checked:values.checked.includes(task)},task);})})})})]});}","map":{"version":3,"sources":["C:/Users/SonBui/OneDrive/Máy tính/dacsanvungmien_frontent/src/components/_dashboard/app/AppTasks.js"],"names":["Form","FormikProvider","useFormik","Box","Card","Checkbox","CardHeader","Typography","FormControlLabel","Stack","TASKS","TaskItem","task","checked","formik","other","getFieldProps","py","color","textDecoration","AppTasks","initialValues","onSubmit","values","console","log","handleSubmit","px","map","includes"],"mappings":"uWACA,OAASA,IAAT,CAAeC,cAAf,CAA+BC,SAA/B,KAAgD,QAAhD,CACA;AACA,OACIC,GADJ,CAEIC,IAFJ,CAGIC,QAHJ,CAIIC,UAJJ,CAKIC,UALJ,CAMIC,gBANJ,CAOIC,KAPJ,KAQO,eARP,CAUA;wFAEA,GAAMC,CAAAA,KAAK,CAAG,CACV,uBADU,CAEV,mCAFU,CAGV,qBAHU,CAIV,uBAJU,CAKV,iBALU,CAAd,CAQA;AAQA,QAASC,CAAAA,QAAT,MAAuD,IAAnCC,CAAAA,IAAmC,MAAnCA,IAAmC,CAA7BC,OAA6B,MAA7BA,OAA6B,CAApBC,MAAoB,MAApBA,MAAoB,CAATC,KAAS,0CACnD,GAAQC,CAAAA,aAAR,CAA0BF,MAA1B,CAAQE,aAAR,CAEA,mBACI,KAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,cAAc,CAAC,eAAtC,CAAsD,EAAE,CAAE,CAAEC,EAAE,CAAE,IAAN,CAA1D,uBACI,KAAC,gBAAD,EACI,OAAO,cACH,KAAC,QAAD,gCAAcD,aAAa,CAAC,SAAD,CAA3B,MAAwC,KAAK,CAAEJ,IAA/C,CAAqD,OAAO,CAAEC,OAA9D,EAA2EE,KAA3E,EAFR,CAII,KAAK,cACD,KAAC,UAAD,EACI,OAAO,CAAC,OADZ,CAEI,EAAE,kBACMF,OAAO,EAAI,CACXK,KAAK,CAAE,eADI,CAEXC,cAAc,CAAE,cAFL,CADjB,CAFN,UASKP,IATL,EALR,EADJ,EADJ,CAsBH,CAED,cAAe,SAASQ,CAAAA,QAAT,EAAoB,CAC/B,GAAMN,CAAAA,MAAM,CAAGZ,SAAS,CAAC,CACrBmB,aAAa,CAAE,CACXR,OAAO,CAAE,CAACH,KAAK,CAAC,CAAD,CAAN,CADE,CADM,CAIrBY,QAAQ,CAAE,kBAACC,MAAD,CAAY,CAClBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACH,CANoB,CAAD,CAAxB,CASA,GAAQA,CAAAA,MAAR,CAAiCT,MAAjC,CAAQS,MAAR,CAAgBG,YAAhB,CAAiCZ,MAAjC,CAAgBY,YAAhB,CAEA,mBACI,MAAC,IAAD,yBACI,KAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,EADJ,cAEI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAN,CAASV,EAAE,CAAE,CAAb,CAAT,uBACI,KAAC,cAAD,EAAgB,KAAK,CAAEH,MAAvB,uBACI,KAAC,IAAD,EAAM,YAAY,CAAC,KAAnB,CAAyB,UAAU,KAAnC,CAAoC,QAAQ,CAAEY,YAA9C,UACKhB,KAAK,CAACkB,GAAN,CAAU,SAAChB,IAAD,qBACP,KAAC,QAAD,EAEI,IAAI,CAAEA,IAFV,CAGI,MAAM,CAAEE,MAHZ,CAII,OAAO,CAAES,MAAM,CAACV,OAAP,CAAegB,QAAf,CAAwBjB,IAAxB,CAJb,EACSA,IADT,CADO,EAAV,CADL,EADJ,EADJ,EAFJ,GADJ,CAmBH","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Form, FormikProvider, useFormik } from 'formik';\r\n// material\r\nimport {\r\n    Box,\r\n    Card,\r\n    Checkbox,\r\n    CardHeader,\r\n    Typography,\r\n    FormControlLabel,\r\n    Stack\r\n} from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst TASKS = [\r\n    'Create FireStone Logo',\r\n    'Add SCSS and JS files if required',\r\n    'Stakeholder Meeting',\r\n    'Scoping & Estimations',\r\n    'Sprint Showcase'\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nTaskItem.propTypes = {\r\n    task: PropTypes.string,\r\n    checked: PropTypes.bool,\r\n    formik: PropTypes.object\r\n};\r\n\r\nfunction TaskItem({ task, checked, formik, ...other }) {\r\n    const { getFieldProps } = formik;\r\n\r\n    return (\r\n        <Stack direction='row' justifyContent='space-between' sx={{ py: 0.75 }}>\r\n            <FormControlLabel\r\n                control={\r\n                    <Checkbox {...getFieldProps('checked')} value={task} checked={checked} {...other} />\r\n                }\r\n                label={\r\n                    <Typography\r\n                        variant='body2'\r\n                        sx={{\r\n                            ...(checked && {\r\n                                color: 'text.disabled',\r\n                                textDecoration: 'line-through'\r\n                            })\r\n                        }}\r\n                    >\r\n                        {task}\r\n                    </Typography>\r\n                }\r\n            />\r\n        </Stack>\r\n    );\r\n}\r\n\r\nexport default function AppTasks() {\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            checked: [TASKS[2]]\r\n        },\r\n        onSubmit: (values) => {\r\n            console.log(values);\r\n        }\r\n    });\r\n\r\n    const { values, handleSubmit } = formik;\r\n\r\n    return (\r\n        <Card>\r\n            <CardHeader title='Tasks' />\r\n            <Box sx={{ px: 3, py: 1 }}>\r\n                <FormikProvider value={formik}>\r\n                    <Form autoComplete='off' noValidate onSubmit={handleSubmit}>\r\n                        {TASKS.map((task) => (\r\n                            <TaskItem\r\n                                key={task}\r\n                                task={task}\r\n                                formik={formik}\r\n                                checked={values.checked.includes(task)}\r\n                            />\r\n                        ))}\r\n                    </Form>\r\n                </FormikProvider>\r\n            </Box>\r\n        </Card>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}