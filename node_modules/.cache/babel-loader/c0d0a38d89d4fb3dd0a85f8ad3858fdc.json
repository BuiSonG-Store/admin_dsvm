{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { userApi } from '../../api/user';\nimport addAxiosHeader from '../../utils/addAxiosHeader';\nconst initialState = {\n  pending: false,\n  success: false,\n  failed: false,\n  message: '',\n  data: []\n};\nconst headers = addAxiosHeader();\nexport const getUsers = createAsyncThunk('Get Users', async () => {\n  const res = await userApi.getUser({\n    headers\n  });\n  return res.data.$values;\n});\nexport const editUser = createAsyncThunk('Edit User', async params => {\n  const res = await userApi.editUser(params, {\n    headers\n  });\n  return res.data;\n});\nexport const getUserById = createAsyncThunk('Get User By Id', async params => {\n  const res = await userApi.getUserById(params);\n  return res.data;\n});\nexport const deleteUser = createAsyncThunk('Delete User', async params => {\n  const res = await userApi.deleteUser(params, {\n    headers\n  });\n  return res.data;\n});\nconst products = createSlice({\n  name: 'user',\n  initialState,\n  extraReducers: {\n    [getUsers.pending]: state => {\n      state.pending = true;\n      state.success = false;\n      state.failed = false;\n    },\n    [getUsers.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [getUsers.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    }\n  }\n});\nexport default products.reducer;","map":{"version":3,"sources":["D:/DacSanVungMienVN/dacsanvungmien_frontent/src/store/slice/user.js"],"names":["createAsyncThunk","createSlice","userApi","addAxiosHeader","initialState","pending","success","failed","message","data","headers","getUsers","res","getUser","$values","editUser","params","getUserById","deleteUser","products","name","extraReducers","state","fulfilled","action","payload","rejected","error","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,OAAR,QAAsB,gBAAtB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,MAAM,EAAE,KAHS;AAIjBC,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;AAOA,MAAMC,OAAO,GAACP,cAAc,EAA5B;AAEA,OAAO,MAAMQ,QAAQ,GAAGX,gBAAgB,CAAC,WAAD,EAAc,YAAY;AAC9D,QAAMY,GAAG,GAAG,MAAMV,OAAO,CAACW,OAAR,CAAgB;AAACH,IAAAA;AAAD,GAAhB,CAAlB;AACA,SAAOE,GAAG,CAACH,IAAJ,CAASK,OAAhB;AACH,CAHuC,CAAjC;AAKP,OAAO,MAAMC,QAAQ,GAAGf,gBAAgB,CAAC,WAAD,EAAc,MAAOgB,MAAP,IAAkB;AACpE,QAAMJ,GAAG,GAAG,MAAMV,OAAO,CAACa,QAAR,CAAiBC,MAAjB,EAAwB;AAACN,IAAAA;AAAD,GAAxB,CAAlB;AACA,SAAOE,GAAG,CAACH,IAAX;AACH,CAHuC,CAAjC;AAKP,OAAO,MAAMQ,WAAW,GAAGjB,gBAAgB,CAAC,gBAAD,EAAmB,MAAOgB,MAAP,IAAkB;AAC5E,QAAMJ,GAAG,GAAG,MAAMV,OAAO,CAACe,WAAR,CAAoBD,MAApB,CAAlB;AACA,SAAOJ,GAAG,CAACH,IAAX;AACH,CAH0C,CAApC;AAKP,OAAO,MAAMS,UAAU,GAAGlB,gBAAgB,CAAC,aAAD,EAAgB,MAAOgB,MAAP,IAAkB;AACxE,QAAMJ,GAAG,GAAG,MAAMV,OAAO,CAACgB,UAAR,CAAmBF,MAAnB,EAA0B;AAACN,IAAAA;AAAD,GAA1B,CAAlB;AACA,SAAOE,GAAG,CAACH,IAAX;AACH,CAHyC,CAAnC;AAKP,MAAMU,QAAQ,GAAGlB,WAAW,CAAC;AACzBmB,EAAAA,IAAI,EAAE,MADmB;AAEzBhB,EAAAA,YAFyB;AAGzBiB,EAAAA,aAAa,EAAE;AACX,KAACV,QAAQ,CAACN,OAAV,GAAqBiB,KAAD,IAAW;AAC3BA,MAAAA,KAAK,CAACjB,OAAN,GAAgB,IAAhB;AACAiB,MAAAA,KAAK,CAAChB,OAAN,GAAgB,KAAhB;AACAgB,MAAAA,KAAK,CAACf,MAAN,GAAe,KAAf;AACH,KALU;AAMX,KAACI,QAAQ,CAACY,SAAV,GAAsB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACrCF,MAAAA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;AACAiB,MAAAA,KAAK,CAAChB,OAAN,GAAgB,IAAhB;AACAgB,MAAAA,KAAK,CAACb,IAAN,GAAae,MAAM,CAACC,OAApB;AACH,KAVU;AAWX,KAACd,QAAQ,CAACe,QAAV,GAAqB,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACpCF,MAAAA,KAAK,CAACjB,OAAN,GAAgB,KAAhB;AACAiB,MAAAA,KAAK,CAACf,MAAN,GAAe,IAAf;AACAe,MAAAA,KAAK,CAACd,OAAN,GAAgBgB,MAAM,CAACG,KAAP,CAAanB,OAA7B;AACH;AAfU;AAHU,CAAD,CAA5B;AAsBA,eAAeW,QAAQ,CAACS,OAAxB","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {userApi} from '../../api/user';\r\nimport addAxiosHeader from '../../utils/addAxiosHeader';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    success: false,\r\n    failed: false,\r\n    message: '',\r\n    data: [],\r\n};\r\nconst headers=addAxiosHeader();\r\n\r\nexport const getUsers = createAsyncThunk('Get Users', async () => {\r\n    const res = await userApi.getUser({headers});\r\n    return res.data.$values;\r\n});\r\n\r\nexport const editUser = createAsyncThunk('Edit User', async (params) => {\r\n    const res = await userApi.editUser(params,{headers});\r\n    return res.data;\r\n});\r\n\r\nexport const getUserById = createAsyncThunk('Get User By Id', async (params) => {\r\n    const res = await userApi.getUserById(params);\r\n    return res.data;\r\n});\r\n\r\nexport const deleteUser = createAsyncThunk('Delete User', async (params) => {\r\n    const res = await userApi.deleteUser(params,{headers});\r\n    return res.data;\r\n});\r\n\r\nconst products = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    extraReducers: {\r\n        [getUsers.pending]: (state) => {\r\n            state.pending = true;\r\n            state.success = false;\r\n            state.failed = false;\r\n        },\r\n        [getUsers.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [getUsers.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default products.reducer;\r\n"]},"metadata":{},"sourceType":"module"}