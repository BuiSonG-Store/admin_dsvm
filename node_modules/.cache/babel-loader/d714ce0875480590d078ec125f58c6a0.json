{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { loginApi } from '../../api/login';\nconst initialState = {\n  pending: false,\n  success: false,\n  isLogin: false,\n  isLogout: false,\n  failed: false,\n  message: '',\n  data: {}\n};\nexport const userLogin = createAsyncThunk('login', async params => {\n  const res = await loginApi.login(params);\n  return res.data;\n});\nconst loginAndLogout = createSlice({\n  name: 'login',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.data = {};\n      state.isLogin = false;\n      state.isLogout = true;\n    }\n  },\n  extraReducers: {\n    [userLogin.pending]: state => {\n      state.pending = true;\n      state.success = false;\n      state.failed = false;\n    },\n    [userLogin.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n      state.isLogin = true;\n      state.isLogout = false;\n    },\n    [userLogin.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    }\n  }\n});\nexport default loginAndLogout.reducer;\nexport const {\n  logout\n} = loginAndLogout.actions;","map":{"version":3,"sources":["C:/Users/SonBui/OneDrive/Máy tính/dacsanvungmien_frontent/src/store/slice/loginAndLogout.js"],"names":["createAsyncThunk","createSlice","loginApi","initialState","pending","success","isLogin","isLogout","failed","message","data","userLogin","params","res","login","loginAndLogout","name","reducers","logout","state","extraReducers","fulfilled","action","payload","rejected","error","reducer","actions"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,QAAT,QAAyB,iBAAzB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,OAAO,EAAE,KAHQ;AAIjBC,EAAAA,QAAQ,EAAE,KAJO;AAKjBC,EAAAA,MAAM,EAAE,KALS;AAMjBC,EAAAA,OAAO,EAAE,EANQ;AAOjBC,EAAAA,IAAI,EAAE;AAPW,CAArB;AASA,OAAO,MAAMC,SAAS,GAAGX,gBAAgB,CAAC,OAAD,EAAU,MAAOY,MAAP,IAAkB;AACjE,QAAMC,GAAG,GAAG,MAAMX,QAAQ,CAACY,KAAT,CAAeF,MAAf,CAAlB;AACA,SAAOC,GAAG,CAACH,IAAX;AACH,CAHwC,CAAlC;AAKP,MAAMK,cAAc,GAAGd,WAAW,CAAC;AAC/Be,EAAAA,IAAI,EAAE,OADyB;AAE/Bb,EAAAA,YAF+B;AAG/Bc,EAAAA,QAAQ,EAAC;AACLC,IAAAA,MAAM,EAAEC,KAAD,IAAS;AACZA,MAAAA,KAAK,CAACT,IAAN,GAAW,EAAX;AACAS,MAAAA,KAAK,CAACb,OAAN,GAAc,KAAd;AACAa,MAAAA,KAAK,CAACZ,QAAN,GAAe,IAAf;AACH;AALI,GAHsB;AAU/Ba,EAAAA,aAAa,EAAE;AACX,KAACT,SAAS,CAACP,OAAX,GAAsBe,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACf,OAAN,GAAgB,IAAhB;AACAe,MAAAA,KAAK,CAACd,OAAN,GAAe,KAAf;AACAc,MAAAA,KAAK,CAACX,MAAN,GAAa,KAAb;AACH,KALU;AAMX,KAACG,SAAS,CAACU,SAAX,GAAuB,CAACF,KAAD,EAAQG,MAAR,KAAmB;AACtCH,MAAAA,KAAK,CAACf,OAAN,GAAgB,KAAhB;AACAe,MAAAA,KAAK,CAACd,OAAN,GAAgB,IAAhB;AACAc,MAAAA,KAAK,CAACT,IAAN,GAAaY,MAAM,CAACC,OAApB;AACAJ,MAAAA,KAAK,CAACb,OAAN,GAAc,IAAd;AACAa,MAAAA,KAAK,CAACZ,QAAN,GAAe,KAAf;AACH,KAZU;AAaX,KAACI,SAAS,CAACa,QAAX,GAAsB,CAACL,KAAD,EAAQG,MAAR,KAAmB;AACrCH,MAAAA,KAAK,CAACf,OAAN,GAAgB,KAAhB;AACAe,MAAAA,KAAK,CAACX,MAAN,GAAe,IAAf;AACAW,MAAAA,KAAK,CAACV,OAAN,GAAgBa,MAAM,CAACG,KAAP,CAAahB,OAA7B;AACH;AAjBU;AAVgB,CAAD,CAAlC;AA+BA,eAAeM,cAAc,CAACW,OAA9B;AACA,OAAO,MAAM;AAACR,EAAAA;AAAD,IAASH,cAAc,CAACY,OAA9B","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { loginApi } from '../../api/login';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    success: false,\r\n    isLogin: false,\r\n    isLogout: false,\r\n    failed: false,\r\n    message: '',\r\n    data: {},\r\n};\r\nexport const userLogin = createAsyncThunk('login', async (params) => {\r\n    const res = await loginApi.login(params);\r\n    return res.data;\r\n});\r\n\r\nconst loginAndLogout = createSlice({\r\n    name: 'login',\r\n    initialState,\r\n    reducers:{\r\n        logout:(state)=>{\r\n            state.data={};\r\n            state.isLogin=false;\r\n            state.isLogout=true;\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [userLogin.pending]: (state) => {\r\n            state.pending = true;\r\n            state.success= false;\r\n            state.failed=false;\r\n        },\r\n        [userLogin.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n            state.isLogin=true;\r\n            state.isLogout=false;\r\n        },\r\n        [userLogin.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default loginAndLogout.reducer;\r\nexport const {logout}=loginAndLogout.actions;"]},"metadata":{},"sourceType":"module"}