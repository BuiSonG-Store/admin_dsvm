{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { productApi } from '../../api/product';\nimport addAxiosHeader from '../../utils/addAxiosHeader';\nconst initialState = {\n  pending: false,\n  success: false,\n  failed: false,\n  message: '',\n  data: []\n};\nconst headers = addAxiosHeader();\nexport const postProductImage = createAsyncThunk('Post Product Image', async params => {\n  const res = await productApi.postImage(params, {\n    headers\n  });\n  return res.data;\n});\nexport const editProductImage = createAsyncThunk('Edit Product Image', async params => {\n  const res = await productApi.editProductImage(params, {\n    headers\n  });\n  return res.data;\n});\nconst products = createSlice({\n  name: 'product image',\n  initialState,\n  extraReducers: {\n    [postProductImage.pending]: state => {\n      state.pending = true;\n      state.success = false;\n      state.failed = false;\n    },\n    [postProductImage.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [postProductImage.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    },\n    [editProductImage.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [editProductImage.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    }\n  }\n});\nexport default products.reducer;","map":{"version":3,"sources":["D:/DacSanVungMienVN/dacsanvungmien_frontent/src/store/slice/productImage.js"],"names":["createAsyncThunk","createSlice","productApi","addAxiosHeader","initialState","pending","success","failed","message","data","headers","postProductImage","params","res","postImage","editProductImage","products","name","extraReducers","state","fulfilled","action","payload","rejected","error","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,MAAM,EAAE,KAHS;AAIjBC,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;AAQA,MAAMC,OAAO,GAACP,cAAc,EAA5B;AAGA,OAAO,MAAMQ,gBAAgB,GAAEX,gBAAgB,CAAC,oBAAD,EAAsB,MAAOY,MAAP,IAAgB;AACjF,QAAMC,GAAG,GAAG,MAAMX,UAAU,CAACY,SAAX,CAAqBF,MAArB,EAA4B;AAACF,IAAAA;AAAD,GAA5B,CAAlB;AACA,SAAOG,GAAG,CAACJ,IAAX;AACH,CAH8C,CAAxC;AAIP,OAAO,MAAMM,gBAAgB,GAAEf,gBAAgB,CAAC,oBAAD,EAAsB,MAAOY,MAAP,IAAgB;AACjF,QAAMC,GAAG,GAAG,MAAMX,UAAU,CAACa,gBAAX,CAA4BH,MAA5B,EAAmC;AAACF,IAAAA;AAAD,GAAnC,CAAlB;AACA,SAAOG,GAAG,CAACJ,IAAX;AACH,CAH8C,CAAxC;AAIP,MAAMO,QAAQ,GAAGf,WAAW,CAAC;AACzBgB,EAAAA,IAAI,EAAE,eADmB;AAEzBb,EAAAA,YAFyB;AAGzBc,EAAAA,aAAa,EAAE;AACX,KAACP,gBAAgB,CAACN,OAAlB,GAA6Bc,KAAD,IAAW;AACnCA,MAAAA,KAAK,CAACd,OAAN,GAAgB,IAAhB;AACAc,MAAAA,KAAK,CAACb,OAAN,GAAe,KAAf;AACAa,MAAAA,KAAK,CAACZ,MAAN,GAAa,KAAb;AACH,KALU;AAMX,KAACI,gBAAgB,CAACS,SAAlB,GAA8B,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7CF,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACAc,MAAAA,KAAK,CAACb,OAAN,GAAgB,IAAhB;AACAa,MAAAA,KAAK,CAACV,IAAN,GAAaY,MAAM,CAACC,OAApB;AACH,KAVU;AAWX,KAACX,gBAAgB,CAACY,QAAlB,GAA6B,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AAC5CF,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACAc,MAAAA,KAAK,CAACZ,MAAN,GAAe,IAAf;AACAY,MAAAA,KAAK,CAACX,OAAN,GAAgBa,MAAM,CAACG,KAAP,CAAahB,OAA7B;AACH,KAfU;AAgBX,KAACO,gBAAgB,CAACK,SAAlB,GAA8B,CAACD,KAAD,EAAQE,MAAR,KAAmB;AAC7CF,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACAc,MAAAA,KAAK,CAACb,OAAN,GAAgB,IAAhB;AACAa,MAAAA,KAAK,CAACV,IAAN,GAAaY,MAAM,CAACC,OAApB;AACH,KApBU;AAqBX,KAACP,gBAAgB,CAACQ,QAAlB,GAA6B,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AAC5CF,MAAAA,KAAK,CAACd,OAAN,GAAgB,KAAhB;AACAc,MAAAA,KAAK,CAACZ,MAAN,GAAe,IAAf;AACAY,MAAAA,KAAK,CAACX,OAAN,GAAgBa,MAAM,CAACG,KAAP,CAAahB,OAA7B;AACH;AAzBU;AAHU,CAAD,CAA5B;AAgCA,eAAeQ,QAAQ,CAACS,OAAxB","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport { productApi } from '../../api/product';\r\nimport addAxiosHeader from '../../utils/addAxiosHeader';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    success: false,\r\n    failed: false,\r\n    message: '',\r\n    data: [],\r\n};\r\n\r\nconst headers=addAxiosHeader();\r\n\r\n\r\nexport const postProductImage= createAsyncThunk('Post Product Image',async (params)=>{\r\n    const res = await productApi.postImage(params,{headers});\r\n    return res.data;\r\n});\r\nexport const editProductImage= createAsyncThunk('Edit Product Image',async (params)=>{\r\n    const res = await productApi.editProductImage(params,{headers});\r\n    return res.data;\r\n});\r\nconst products = createSlice({\r\n    name: 'product image',\r\n    initialState,\r\n    extraReducers: {\r\n        [postProductImage.pending]: (state) => {\r\n            state.pending = true;\r\n            state.success= false;\r\n            state.failed=false;\r\n        },\r\n        [postProductImage.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [postProductImage.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n        [editProductImage.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [editProductImage.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default products.reducer;\r\n"]},"metadata":{},"sourceType":"module"}