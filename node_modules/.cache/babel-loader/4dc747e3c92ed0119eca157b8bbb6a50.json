{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { weightApi } from '../../api/weight';\nconst initialState = {\n  pending: false,\n  success: false,\n  failed: false,\n  message: '',\n  data: []\n};\nexport const getWeight = createAsyncThunk('Get Weight', async () => {\n  const res = await weightApi.getWeight();\n  return res.data.$values;\n});\nconst weights = createSlice({\n  name: 'weight',\n  initialState,\n  extraReducers: {\n    [getWeight.pending]: state => {\n      state.pending = true;\n      state.success = false;\n      state.failed = false;\n    },\n    [getWeight.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [getWeight.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    }\n  }\n});\nexport default weights.reducer;","map":{"version":3,"sources":["C:/Users/SonBui/OneDrive/Máy tính/dacsanvungmien_frontent/src/store/slice/weight.js"],"names":["createAsyncThunk","createSlice","weightApi","initialState","pending","success","failed","message","data","getWeight","res","$values","weights","name","extraReducers","state","fulfilled","action","payload","rejected","error","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,MAAM,EAAE,KAHS;AAIjBC,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;AAQA,OAAO,MAAMC,SAAS,GAAET,gBAAgB,CAAC,YAAD,EAAe,YAAY;AAC/D,QAAMU,GAAG,GAAG,MAAMR,SAAS,CAACO,SAAV,EAAlB;AACA,SAAOC,GAAG,CAACF,IAAJ,CAASG,OAAhB;AACH,CAHuC,CAAjC;AAMP,MAAMC,OAAO,GAAGX,WAAW,CAAC;AACxBY,EAAAA,IAAI,EAAE,QADkB;AAExBV,EAAAA,YAFwB;AAGxBW,EAAAA,aAAa,EAAE;AACX,KAACL,SAAS,CAACL,OAAX,GAAsBW,KAAD,IAAW;AAC5BA,MAAAA,KAAK,CAACX,OAAN,GAAgB,IAAhB;AACAW,MAAAA,KAAK,CAACV,OAAN,GAAgB,KAAhB;AACAU,MAAAA,KAAK,CAACT,MAAN,GAAe,KAAf;AACH,KALU;AAMX,KAACG,SAAS,CAACO,SAAX,GAAuB,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACtCF,MAAAA,KAAK,CAACX,OAAN,GAAgB,KAAhB;AACAW,MAAAA,KAAK,CAACV,OAAN,GAAgB,IAAhB;AACAU,MAAAA,KAAK,CAACP,IAAN,GAAaS,MAAM,CAACC,OAApB;AACH,KAVU;AAWX,KAACT,SAAS,CAACU,QAAX,GAAsB,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACrCF,MAAAA,KAAK,CAACX,OAAN,GAAgB,KAAhB;AACAW,MAAAA,KAAK,CAACT,MAAN,GAAe,IAAf;AACAS,MAAAA,KAAK,CAACR,OAAN,GAAgBU,MAAM,CAACG,KAAP,CAAab,OAA7B;AACH;AAfU;AAHS,CAAD,CAA3B;AAsBA,eAAeK,OAAO,CAACS,OAAvB","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {weightApi} from '../../api/weight';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    success: false,\r\n    failed: false,\r\n    message: '',\r\n    data: [],\r\n};\r\n\r\nexport const getWeight= createAsyncThunk('Get Weight', async () => {\r\n    const res = await weightApi.getWeight();\r\n    return res.data.$values;\r\n});\r\n\r\n\r\nconst weights = createSlice({\r\n    name: 'weight',\r\n    initialState,\r\n    extraReducers: {\r\n        [getWeight.pending]: (state) => {\r\n            state.pending = true;\r\n            state.success = false;\r\n            state.failed = false;\r\n        },\r\n        [getWeight.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [getWeight.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default weights.reducer;\r\n"]},"metadata":{},"sourceType":"module"}