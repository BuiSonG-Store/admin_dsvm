{"ast":null,"code":"var _jsxFileName = \"D:\\\\DacSanVungMienVN\\\\dacsanvungmien_frontent\\\\src\\\\layouts\\\\dashboard\\\\LanguagePopover.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react'; // material\n\nimport { alpha } from '@mui/material/styles';\nimport { Box, MenuItem, ListItemIcon, ListItemText, IconButton } from '@mui/material'; // components\n\nimport MenuPopover from '../../components/MenuPopover'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LANGS = [{\n  value: 'en',\n  label: 'English',\n  icon: '/static/icons/ic_flag_en.svg'\n}, {\n  value: 'de',\n  label: 'German',\n  icon: '/static/icons/ic_flag_de.svg'\n}, {\n  value: 'fr',\n  label: 'French',\n  icon: '/static/icons/ic_flag_fr.svg'\n}]; // ----------------------------------------------------------------------\n\nexport default function LanguagePopover() {\n  _s();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      ref: anchorRef,\n      onClick: handleOpen,\n      sx: {\n        padding: 0,\n        width: 44,\n        height: 44,\n        ...(open && {\n          bgcolor: theme => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\n        })\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: LANGS[0].icon,\n        alt: LANGS[0].label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MenuPopover, {\n      open: open,\n      onClose: handleClose,\n      anchorEl: anchorRef.current,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          py: 1\n        },\n        children: LANGS.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          selected: option.value === LANGS[0].value,\n          onClick: handleClose,\n          sx: {\n            py: 1,\n            px: 2.5\n          },\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              component: \"img\",\n              alt: option.label,\n              src: option.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primaryTypographyProps: {\n              variant: 'body2'\n            },\n            children: option.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)]\n        }, option.value, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LanguagePopover, \"Hd6TMPAqlaYCVBM5IMM9OnvyEW4=\");\n\n_c = LanguagePopover;\n\nvar _c;\n\n$RefreshReg$(_c, \"LanguagePopover\");","map":{"version":3,"sources":["D:/DacSanVungMienVN/dacsanvungmien_frontent/src/layouts/dashboard/LanguagePopover.js"],"names":["useRef","useState","alpha","Box","MenuItem","ListItemIcon","ListItemText","IconButton","MenuPopover","LANGS","value","label","icon","LanguagePopover","anchorRef","open","setOpen","handleOpen","handleClose","padding","width","height","bgcolor","theme","palette","primary","main","action","focusOpacity","current","py","map","option","px","variant"],"mappings":"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","sourcesContent":["import { useRef, useState } from 'react';\r\n// material\r\nimport { alpha } from '@mui/material/styles';\r\nimport { Box, MenuItem, ListItemIcon, ListItemText, IconButton } from '@mui/material';\r\n// components\r\nimport MenuPopover from '../../components/MenuPopover';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst LANGS = [\r\n    {\r\n        value: 'en',\r\n        label: 'English',\r\n        icon: '/static/icons/ic_flag_en.svg'\r\n    },\r\n    {\r\n        value: 'de',\r\n        label: 'German',\r\n        icon: '/static/icons/ic_flag_de.svg'\r\n    },\r\n    {\r\n        value: 'fr',\r\n        label: 'French',\r\n        icon: '/static/icons/ic_flag_fr.svg'\r\n    }\r\n];\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function LanguagePopover() {\r\n    const anchorRef = useRef(null);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <IconButton\r\n                ref={anchorRef}\r\n                onClick={handleOpen}\r\n                sx={{\r\n                    padding: 0,\r\n                    width: 44,\r\n                    height: 44,\r\n                    ...(open && {\r\n                        bgcolor: (theme) => alpha(theme.palette.primary.main, theme.palette.action.focusOpacity)\r\n                    })\r\n                }}\r\n            >\r\n                <img src={LANGS[0].icon} alt={LANGS[0].label} />\r\n            </IconButton>\r\n\r\n            <MenuPopover open={open} onClose={handleClose} anchorEl={anchorRef.current}>\r\n                <Box sx={{ py: 1 }}>\r\n                    {LANGS.map((option) => (\r\n                        <MenuItem\r\n                            key={option.value}\r\n                            selected={option.value === LANGS[0].value}\r\n                            onClick={handleClose}\r\n                            sx={{ py: 1, px: 2.5 }}\r\n                        >\r\n                            <ListItemIcon>\r\n                                <Box component='img' alt={option.label} src={option.icon} />\r\n                            </ListItemIcon>\r\n                            <ListItemText primaryTypographyProps={{ variant: 'body2' }}>\r\n                                {option.label}\r\n                            </ListItemText>\r\n                        </MenuItem>\r\n                    ))}\r\n                </Box>\r\n            </MenuPopover>\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}