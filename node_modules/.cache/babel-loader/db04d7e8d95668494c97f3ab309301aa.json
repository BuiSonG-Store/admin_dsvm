{"ast":null,"code":"var _jsxFileName = \"D:\\\\DacSanVungMienVN\\\\dacsanvungmien_frontent\\\\src\\\\components\\\\category\\\\CreateForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useFormik, Form, FormikProvider } from 'formik'; // material\n\nimport { Stack, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { createCategory, editCategory } from '../../store/slice/category'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateForm(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const userEdit = props.dataEdit;\n  const formValue = {\n    Name: userEdit ? userEdit.name : ''\n  };\n  const initialValues = userEdit ? { ...formValue\n  } : formValue;\n  const UserSchema = Yup.object().shape({\n    Name: Yup.string().required()\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema: UserSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n\n      try {\n        const res = (await userEdit) ? dispatch(editCategory({\n          id: userEdit.id,\n          name: values.Name\n        })) : dispatch(createCategory({\n          name: values.Name\n        }));\n        unwrapResult(res);\n        props.handleSubmit(res);\n        resetForm();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"Name\",\n          type: \"text\",\n          label: \"Name\",\n          value: values.Name,\n          ...getFieldProps('Name'),\n          error: Boolean(touched.Name && errors.Name),\n          helperText: touched.Name && errors.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateForm, \"snIeeAJX6ddd+yTscBhJ9TqRTSM=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = CreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"sources":["D:/DacSanVungMienVN/dacsanvungmien_frontent/src/components/category/CreateForm.js"],"names":["Yup","useFormik","Form","FormikProvider","Stack","TextField","LoadingButton","unwrapResult","useDispatch","createCategory","editCategory","CreateForm","props","dispatch","userEdit","dataEdit","formValue","Name","name","initialValues","UserSchema","object","shape","string","required","formik","validationSchema","onSubmit","values","resetForm","res","id","handleSubmit","e","console","log","errors","touched","isSubmitting","getFieldProps","Boolean"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport {\r\n    Stack,\r\n    TextField,\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport {createCategory,editCategory} from '../../store/slice/category';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CreateForm(props) {\r\n    const dispatch=useDispatch();\r\n    const userEdit=props.dataEdit;\r\n    const formValue={\r\n        Name: userEdit?userEdit.name:'',\r\n    };\r\n\r\n    const initialValues=userEdit?{...formValue}:formValue;\r\n\r\n    const UserSchema = Yup.object().shape({\r\n        Name: Yup.string().required(),\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: UserSchema,\r\n        onSubmit: async (values,{resetForm}) => {\r\n            try {\r\n                const res = await userEdit ?\r\n                    dispatch(editCategory({\r\n                        id:userEdit.id,\r\n                        name: values.Name,\r\n                    }))\r\n                    :dispatch(createCategory({\r\n                        name: values.Name,\r\n                    }))\r\n                ;\r\n                unwrapResult(res);\r\n                props.handleSubmit(res);\r\n                resetForm();\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <Form autoComplete='off' noValidate onSubmit={handleSubmit}>\r\n                <Stack spacing={3}>\r\n                    <TextField\r\n                        fullWidth\r\n                        autoComplete='Name'\r\n                        type='text'\r\n                        label='Name'\r\n                        value={values.Name}\r\n                        {...getFieldProps('Name')}\r\n                        error={Boolean(touched.Name && errors.Name)}\r\n                        helperText={touched.Name && errors.Name}\r\n                    />\r\n                    \r\n                </Stack>\r\n\r\n                <LoadingButton\r\n                    fullWidth\r\n                    size='large'\r\n                    type='submit'\r\n                    variant='contained'\r\n                    loading={isSubmitting}\r\n                >\r\n                    Submit\r\n                </LoadingButton>\r\n            </Form>\r\n        </FormikProvider>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}