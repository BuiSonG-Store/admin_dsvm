{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { categoryApi } from '../../api/category';\nimport addAxiosHeader from '../../utils/addAxiosHeader';\nconst initialState = {\n  pending: false,\n  success: false,\n  failed: false,\n  message: '',\n  data: []\n};\nconst headers = addAxiosHeader();\nexport const getCategory = createAsyncThunk('Get Category', async () => {\n  const res = await categoryApi.getCategory({\n    headers\n  });\n  return res.data.$values;\n});\nexport const editCategory = createAsyncThunk('Edit Category', async params => {\n  const res = await categoryApi.editCategory(params, {\n    headers\n  });\n  return res.data;\n});\nexport const getCategoryById = createAsyncThunk('Get Category By Id', async params => {\n  const res = await categoryApi.getUserById(params);\n  return res.data;\n});\nexport const createCategory = createAsyncThunk('Create Category', async params => {\n  const res = await categoryApi.createCategory(params, {\n    headers\n  });\n  return res.data;\n});\nexport const deleteCategory = createAsyncThunk('Delete Category', async params => {\n  const res = await categoryApi.deleteCategory(params, {\n    headers\n  });\n  return res.data;\n});\nconst products = createSlice({\n  name: 'category',\n  initialState,\n  extraReducers: {\n    [getCategory.pending]: state => {\n      state.pending = true;\n      state.success = false;\n      state.failed = false;\n    },\n    [getCategory.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [getCategory.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    }\n  }\n});\nexport default products.reducer;","map":{"version":3,"sources":["C:/Users/SonBui/OneDrive/Máy tính/dacsanvungmien_frontent/src/store/slice/category.js"],"names":["createAsyncThunk","createSlice","categoryApi","addAxiosHeader","initialState","pending","success","failed","message","data","headers","getCategory","res","$values","editCategory","params","getCategoryById","getUserById","createCategory","deleteCategory","products","name","extraReducers","state","fulfilled","action","payload","rejected","error","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {categoryApi} from '../../api/category';\r\nimport addAxiosHeader from '../../utils/addAxiosHeader';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    success: false,\r\n    failed: false,\r\n    message: '',\r\n    data: [],\r\n};\r\nconst headers=addAxiosHeader();\r\n\r\nexport const getCategory = createAsyncThunk('Get Category', async () => {\r\n    const res = await categoryApi.getCategory({headers});\r\n    return res.data.$values;\r\n});\r\n\r\nexport const editCategory= createAsyncThunk('Edit Category', async (params) => {\r\n    const res = await categoryApi.editCategory(params,{headers});\r\n    return res.data;\r\n});\r\n\r\nexport const getCategoryById = createAsyncThunk('Get Category By Id', async (params) => {\r\n    const res = await categoryApi.getUserById(params);\r\n    return res.data;\r\n});\r\nexport const createCategory = createAsyncThunk('Create Category', async (params) => {\r\n    const res = await categoryApi.createCategory(params,{headers});\r\n\r\n    return res.data;\r\n});\r\nexport const deleteCategory = createAsyncThunk('Delete Category', async (params) => {\r\n    const res = await categoryApi.deleteCategory(params,{headers});\r\n    return res.data;\r\n});\r\n\r\nconst products = createSlice({\r\n    name: 'category',\r\n    initialState,\r\n    extraReducers: {\r\n        [getCategory.pending]: (state) => {\r\n            state.pending = true;\r\n            state.success = false;\r\n            state.failed = false;\r\n        },\r\n        [getCategory.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [getCategory.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default products.reducer;\r\n"]},"metadata":{},"sourceType":"module"}