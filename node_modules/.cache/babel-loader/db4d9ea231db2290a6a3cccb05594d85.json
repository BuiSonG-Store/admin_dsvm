{"ast":null,"code":"var _jsxFileName = \"D:\\\\DacSanVungMienVN\\\\admin\\\\src\\\\components\\\\_dashboard\\\\blog\\\\BlogPostCard.js\";\nimport PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport shareFill from '@iconify/icons-eva/share-fill';\nimport messageCircleFill from '@iconify/icons-eva/message-circle-fill'; // material\n\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Link, Card, Grid, Avatar, Typography, CardContent } from '@mui/material'; // utils\n\nimport { fDate } from '../../../utils/formatTime';\nimport { fShortenNumber } from '../../../utils/formatNumber'; //\n\nimport SvgIconStyle from '../../SvgIconStyle'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CardMediaStyle = styled('div')({\n  position: 'relative',\n  paddingTop: 'calc(100% * 3 / 4)'\n});\nconst TitleStyle = styled(Link)({\n  height: 44,\n  overflow: 'hidden',\n  WebkitLineClamp: 2,\n  display: '-webkit-box',\n  WebkitBoxOrient: 'vertical'\n});\nconst AvatarStyle = styled(Avatar)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    zIndex: 9,\n    width: 32,\n    height: 32,\n    position: 'absolute',\n    left: theme.spacing(3),\n    bottom: theme.spacing(-2)\n  };\n});\nconst InfoStyle = styled('div')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'flex-end',\n    marginTop: theme.spacing(3),\n    color: theme.palette.text.disabled\n  };\n});\nconst CoverImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '100%',\n  objectFit: 'cover',\n  position: 'absolute'\n}); // ----------------------------------------------------------------------\n\nBlogPostCard.propTypes = {\n  post: PropTypes.object.isRequired,\n  index: PropTypes.number\n};\nexport default function BlogPostCard(_ref3) {\n  let {\n    post,\n    index\n  } = _ref3;\n  const {\n    cover,\n    title,\n    view,\n    comment,\n    share,\n    author,\n    createdAt\n  } = post;\n  const latestPostLarge = index === 0;\n  const latestPost = index === 1 || index === 2;\n  const POST_INFO = [{\n    number: comment,\n    icon: messageCircleFill\n  }, {\n    number: view,\n    icon: eyeFill\n  }, {\n    number: share,\n    icon: shareFill\n  }];\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 12,\n    sm: latestPostLarge ? 12 : 6,\n    md: latestPostLarge ? 6 : 3,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardMediaStyle, {\n        sx: { ...((latestPostLarge || latestPost) && {\n            pt: 'calc(100% * 4 / 3)',\n            '&:after': {\n              top: 0,\n              content: '\\'\\'',\n              width: '100%',\n              height: '100%',\n              position: 'absolute',\n              bgcolor: theme => alpha(theme.palette.grey[900], 0.72)\n            }\n          }),\n          ...(latestPostLarge && {\n            pt: {\n              xs: 'calc(100% * 4 / 3)',\n              sm: 'calc(100% * 3 / 4.66)'\n            }\n          })\n        },\n        children: [/*#__PURE__*/_jsxDEV(SvgIconStyle, {\n          color: \"paper\",\n          src: \"/static/icons/shape-avatar.svg\",\n          sx: {\n            width: 80,\n            height: 36,\n            zIndex: 9,\n            bottom: -15,\n            position: 'absolute',\n            ...((latestPostLarge || latestPost) && {\n              display: 'none'\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AvatarStyle, {\n          alt: author.name,\n          src: author.avatarUrl,\n          sx: { ...((latestPostLarge || latestPost) && {\n              zIndex: 9,\n              top: 24,\n              left: 24,\n              width: 40,\n              height: 40\n            })\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CoverImgStyle, {\n          alt: title,\n          src: cover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        sx: {\n          pt: 4,\n          ...((latestPostLarge || latestPost) && {\n            bottom: 0,\n            width: '100%',\n            position: 'absolute'\n          })\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"caption\",\n          sx: {\n            color: 'text.disabled',\n            display: 'block'\n          },\n          children: fDate(createdAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TitleStyle, {\n          to: \"#\",\n          color: \"inherit\",\n          variant: \"subtitle2\",\n          underline: \"hover\",\n          component: RouterLink,\n          sx: { ...(latestPostLarge && {\n              typography: 'h5',\n              height: 60\n            }),\n            ...((latestPostLarge || latestPost) && {\n              color: 'common.white'\n            })\n          },\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfoStyle, {\n          children: POST_INFO.map((info, index) => /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              ml: index === 0 ? 0 : 1.5,\n              ...((latestPostLarge || latestPost) && {\n                color: 'grey.500'\n              })\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              component: Icon,\n              icon: info.icon,\n              sx: {\n                width: 16,\n                height: 16,\n                mr: 0.5\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"caption\",\n              children: fShortenNumber(info.number)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_c = BlogPostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlogPostCard\");","map":{"version":3,"sources":["D:/DacSanVungMienVN/admin/src/components/_dashboard/blog/BlogPostCard.js"],"names":["PropTypes","Icon","eyeFill","Link","RouterLink","shareFill","messageCircleFill","alpha","styled","Box","Card","Grid","Avatar","Typography","CardContent","fDate","fShortenNumber","SvgIconStyle","CardMediaStyle","position","paddingTop","TitleStyle","height","overflow","WebkitLineClamp","display","WebkitBoxOrient","AvatarStyle","theme","zIndex","width","left","spacing","bottom","InfoStyle","flexWrap","justifyContent","marginTop","color","palette","text","disabled","CoverImgStyle","top","objectFit","BlogPostCard","propTypes","post","object","isRequired","index","number","cover","title","view","comment","share","author","createdAt","latestPostLarge","latestPost","POST_INFO","icon","pt","content","bgcolor","grey","xs","sm","name","avatarUrl","typography","map","info","alignItems","ml","mr"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,iBAAP,MAA8B,wCAA9B,C,CACA;;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,sBAA9B;AACA,SAASC,GAAT,EAAcN,IAAd,EAAoBO,IAApB,EAA0BC,IAA1B,EAAgCC,MAAhC,EAAwCC,UAAxC,EAAoDC,WAApD,QAAuE,eAAvE,C,CACA;;AACA,SAASC,KAAT,QAAsB,2BAAtB;AACA,SAASC,cAAT,QAA+B,6BAA/B,C,CACA;;AACA,OAAOC,YAAP,MAAyB,oBAAzB,C,CAEA;;;AAEA,MAAMC,cAAc,GAAGV,MAAM,CAAC,KAAD,CAAN,CAAc;AACjCW,EAAAA,QAAQ,EAAE,UADuB;AAEjCC,EAAAA,UAAU,EAAE;AAFqB,CAAd,CAAvB;AAKA,MAAMC,UAAU,GAAGb,MAAM,CAACL,IAAD,CAAN,CAAa;AAC5BmB,EAAAA,MAAM,EAAE,EADoB;AAE5BC,EAAAA,QAAQ,EAAE,QAFkB;AAG5BC,EAAAA,eAAe,EAAE,CAHW;AAI5BC,EAAAA,OAAO,EAAE,aAJmB;AAK5BC,EAAAA,eAAe,EAAE;AALW,CAAb,CAAnB;AAQA,MAAMC,WAAW,GAAGnB,MAAM,CAACI,MAAD,CAAN,CAAe;AAAA,MAAC;AAAEgB,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAC/CC,IAAAA,MAAM,EAAE,CADuC;AAE/CC,IAAAA,KAAK,EAAE,EAFwC;AAG/CR,IAAAA,MAAM,EAAE,EAHuC;AAI/CH,IAAAA,QAAQ,EAAE,UAJqC;AAK/CY,IAAAA,IAAI,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CALyC;AAM/CC,IAAAA,MAAM,EAAEL,KAAK,CAACI,OAAN,CAAc,CAAC,CAAf;AANuC,GAAhB;AAAA,CAAf,CAApB;AASA,MAAME,SAAS,GAAG1B,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,MAAC;AAAEoB,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAC5CH,IAAAA,OAAO,EAAE,MADmC;AAE5CU,IAAAA,QAAQ,EAAE,MAFkC;AAG5CC,IAAAA,cAAc,EAAE,UAH4B;AAI5CC,IAAAA,SAAS,EAAET,KAAK,CAACI,OAAN,CAAc,CAAd,CAJiC;AAK5CM,IAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmBC;AALkB,GAAhB;AAAA,CAAd,CAAlB;AAQA,MAAMC,aAAa,GAAGlC,MAAM,CAAC,KAAD,CAAN,CAAc;AAChCmC,EAAAA,GAAG,EAAE,CAD2B;AAEhCb,EAAAA,KAAK,EAAE,MAFyB;AAGhCR,EAAAA,MAAM,EAAE,MAHwB;AAIhCsB,EAAAA,SAAS,EAAE,OAJqB;AAKhCzB,EAAAA,QAAQ,EAAE;AALsB,CAAd,CAAtB,C,CAQA;;AAEA0B,YAAY,CAACC,SAAb,GAAyB;AACrBC,EAAAA,IAAI,EAAE/C,SAAS,CAACgD,MAAV,CAAiBC,UADF;AAErBC,EAAAA,KAAK,EAAElD,SAAS,CAACmD;AAFI,CAAzB;AAKA,eAAe,SAASN,YAAT,QAAuC;AAAA,MAAjB;AAAEE,IAAAA,IAAF;AAAQG,IAAAA;AAAR,GAAiB;AAClD,QAAM;AAAEE,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,OAAtB;AAA+BC,IAAAA,KAA/B;AAAsCC,IAAAA,MAAtC;AAA8CC,IAAAA;AAA9C,MAA4DX,IAAlE;AACA,QAAMY,eAAe,GAAGT,KAAK,KAAK,CAAlC;AACA,QAAMU,UAAU,GAAGV,KAAK,KAAK,CAAV,IAAeA,KAAK,KAAK,CAA5C;AAEA,QAAMW,SAAS,GAAG,CACd;AAAEV,IAAAA,MAAM,EAAEI,OAAV;AAAmBO,IAAAA,IAAI,EAAExD;AAAzB,GADc,EAEd;AAAE6C,IAAAA,MAAM,EAAEG,IAAV;AAAgBQ,IAAAA,IAAI,EAAE5D;AAAtB,GAFc,EAGd;AAAEiD,IAAAA,MAAM,EAAEK,KAAV;AAAiBM,IAAAA,IAAI,EAAEzD;AAAvB,GAHc,CAAlB;AAMA,sBACI,QAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAEsD,eAAe,GAAG,EAAH,GAAQ,CAA9C;AAAiD,IAAA,EAAE,EAAEA,eAAe,GAAG,CAAH,GAAO,CAA3E;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE;AAAExC,QAAAA,QAAQ,EAAE;AAAZ,OAAV;AAAA,8BACI,QAAC,cAAD;AACI,QAAA,EAAE,EAAE,EACA,IAAI,CAACwC,eAAe,IAAIC,UAApB,KAAmC;AACnCG,YAAAA,EAAE,EAAE,oBAD+B;AAEnC,uBAAW;AACPpB,cAAAA,GAAG,EAAE,CADE;AAEPqB,cAAAA,OAAO,EAAE,MAFF;AAGPlC,cAAAA,KAAK,EAAE,MAHA;AAIPR,cAAAA,MAAM,EAAE,MAJD;AAKPH,cAAAA,QAAQ,EAAE,UALH;AAMP8C,cAAAA,OAAO,EAAGrC,KAAD,IAAWrB,KAAK,CAACqB,KAAK,CAACW,OAAN,CAAc2B,IAAd,CAAmB,GAAnB,CAAD,EAA0B,IAA1B;AANlB;AAFwB,WAAvC,CADA;AAYA,cAAIP,eAAe,IAAI;AACnBI,YAAAA,EAAE,EAAE;AACAI,cAAAA,EAAE,EAAE,oBADJ;AAEAC,cAAAA,EAAE,EAAE;AAFJ;AADe,WAAvB;AAZA,SADR;AAAA,gCAqBI,QAAC,YAAD;AACI,UAAA,KAAK,EAAC,OADV;AAEI,UAAA,GAAG,EAAC,gCAFR;AAGI,UAAA,EAAE,EAAE;AACAtC,YAAAA,KAAK,EAAE,EADP;AAEAR,YAAAA,MAAM,EAAE,EAFR;AAGAO,YAAAA,MAAM,EAAE,CAHR;AAIAI,YAAAA,MAAM,EAAE,CAAC,EAJT;AAKAd,YAAAA,QAAQ,EAAE,UALV;AAMA,gBAAI,CAACwC,eAAe,IAAIC,UAApB,KAAmC;AAAEnC,cAAAA,OAAO,EAAE;AAAX,aAAvC;AANA;AAHR;AAAA;AAAA;AAAA;AAAA,gBArBJ,eAiCI,QAAC,WAAD;AACI,UAAA,GAAG,EAAEgC,MAAM,CAACY,IADhB;AAEI,UAAA,GAAG,EAAEZ,MAAM,CAACa,SAFhB;AAGI,UAAA,EAAE,EAAE,EACA,IAAI,CAACX,eAAe,IAAIC,UAApB,KAAmC;AACnC/B,cAAAA,MAAM,EAAE,CAD2B;AAEnCc,cAAAA,GAAG,EAAE,EAF8B;AAGnCZ,cAAAA,IAAI,EAAE,EAH6B;AAInCD,cAAAA,KAAK,EAAE,EAJ4B;AAKnCR,cAAAA,MAAM,EAAE;AAL2B,aAAvC;AADA;AAHR;AAAA;AAAA;AAAA;AAAA,gBAjCJ,eA+CI,QAAC,aAAD;AAAe,UAAA,GAAG,EAAE+B,KAApB;AAA2B,UAAA,GAAG,EAAED;AAAhC;AAAA;AAAA;AAAA;AAAA,gBA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAmDI,QAAC,WAAD;AACI,QAAA,EAAE,EAAE;AACAW,UAAAA,EAAE,EAAE,CADJ;AAEA,cAAI,CAACJ,eAAe,IAAIC,UAApB,KAAmC;AACnC3B,YAAAA,MAAM,EAAE,CAD2B;AAEnCH,YAAAA,KAAK,EAAE,MAF4B;AAGnCX,YAAAA,QAAQ,EAAE;AAHyB,WAAvC;AAFA,SADR;AAAA,gCAUI,QAAC,UAAD;AACI,UAAA,YAAY,MADhB;AAEI,UAAA,OAAO,EAAC,SAFZ;AAGI,UAAA,EAAE,EAAE;AAAEmB,YAAAA,KAAK,EAAE,eAAT;AAA0Bb,YAAAA,OAAO,EAAE;AAAnC,WAHR;AAAA,oBAKKV,KAAK,CAAC2C,SAAD;AALV;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAkBI,QAAC,UAAD;AACI,UAAA,EAAE,EAAC,GADP;AAEI,UAAA,KAAK,EAAC,SAFV;AAGI,UAAA,OAAO,EAAC,WAHZ;AAII,UAAA,SAAS,EAAC,OAJd;AAKI,UAAA,SAAS,EAAEtD,UALf;AAMI,UAAA,EAAE,EAAE,EACA,IAAIuD,eAAe,IAAI;AAAEY,cAAAA,UAAU,EAAE,IAAd;AAAoBjD,cAAAA,MAAM,EAAE;AAA5B,aAAvB,CADA;AAEA,gBAAI,CAACqC,eAAe,IAAIC,UAApB,KAAmC;AACnCtB,cAAAA,KAAK,EAAE;AAD4B,aAAvC;AAFA,WANR;AAAA,oBAaKe;AAbL;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAkCI,QAAC,SAAD;AAAA,oBACKQ,SAAS,CAACW,GAAV,CAAc,CAACC,IAAD,EAAOvB,KAAP,kBACX,QAAC,GAAD;AAEI,YAAA,EAAE,EAAE;AACAzB,cAAAA,OAAO,EAAE,MADT;AAEAiD,cAAAA,UAAU,EAAE,QAFZ;AAGAC,cAAAA,EAAE,EAAEzB,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,GAHtB;AAIA,kBAAI,CAACS,eAAe,IAAIC,UAApB,KAAmC;AACnCtB,gBAAAA,KAAK,EAAE;AAD4B,eAAvC;AAJA,aAFR;AAAA,oCAWI,QAAC,GAAD;AAAK,cAAA,SAAS,EAAErC,IAAhB;AAAsB,cAAA,IAAI,EAAEwE,IAAI,CAACX,IAAjC;AAAuC,cAAA,EAAE,EAAE;AAAEhC,gBAAAA,KAAK,EAAE,EAAT;AAAaR,gBAAAA,MAAM,EAAE,EAArB;AAAyBsD,gBAAAA,EAAE,EAAE;AAA7B;AAA3C;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAYI,QAAC,UAAD;AAAY,cAAA,OAAO,EAAC,SAApB;AAAA,wBAA+B5D,cAAc,CAACyD,IAAI,CAACtB,MAAN;AAA7C;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA,aACSD,KADT;AAAA;AAAA;AAAA;AAAA,kBADH;AADL;AAAA;AAAA;AAAA;AAAA,gBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAnDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6GH;KAxHuBL,Y","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { Icon } from '@iconify/react';\r\nimport eyeFill from '@iconify/icons-eva/eye-fill';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport shareFill from '@iconify/icons-eva/share-fill';\r\nimport messageCircleFill from '@iconify/icons-eva/message-circle-fill';\r\n// material\r\nimport { alpha, styled } from '@mui/material/styles';\r\nimport { Box, Link, Card, Grid, Avatar, Typography, CardContent } from '@mui/material';\r\n// utils\r\nimport { fDate } from '../../../utils/formatTime';\r\nimport { fShortenNumber } from '../../../utils/formatNumber';\r\n//\r\nimport SvgIconStyle from '../../SvgIconStyle';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst CardMediaStyle = styled('div')({\r\n    position: 'relative',\r\n    paddingTop: 'calc(100% * 3 / 4)'\r\n});\r\n\r\nconst TitleStyle = styled(Link)({\r\n    height: 44,\r\n    overflow: 'hidden',\r\n    WebkitLineClamp: 2,\r\n    display: '-webkit-box',\r\n    WebkitBoxOrient: 'vertical'\r\n});\r\n\r\nconst AvatarStyle = styled(Avatar)(({ theme }) => ({\r\n    zIndex: 9,\r\n    width: 32,\r\n    height: 32,\r\n    position: 'absolute',\r\n    left: theme.spacing(3),\r\n    bottom: theme.spacing(-2)\r\n}));\r\n\r\nconst InfoStyle = styled('div')(({ theme }) => ({\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'flex-end',\r\n    marginTop: theme.spacing(3),\r\n    color: theme.palette.text.disabled\r\n}));\r\n\r\nconst CoverImgStyle = styled('img')({\r\n    top: 0,\r\n    width: '100%',\r\n    height: '100%',\r\n    objectFit: 'cover',\r\n    position: 'absolute'\r\n});\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nBlogPostCard.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n    index: PropTypes.number\r\n};\r\n\r\nexport default function BlogPostCard({ post, index }) {\r\n    const { cover, title, view, comment, share, author, createdAt } = post;\r\n    const latestPostLarge = index === 0;\r\n    const latestPost = index === 1 || index === 2;\r\n\r\n    const POST_INFO = [\r\n        { number: comment, icon: messageCircleFill },\r\n        { number: view, icon: eyeFill },\r\n        { number: share, icon: shareFill }\r\n    ];\r\n\r\n    return (\r\n        <Grid item xs={12} sm={latestPostLarge ? 12 : 6} md={latestPostLarge ? 6 : 3}>\r\n            <Card sx={{ position: 'relative' }}>\r\n                <CardMediaStyle\r\n                    sx={{\r\n                        ...((latestPostLarge || latestPost) && {\r\n                            pt: 'calc(100% * 4 / 3)',\r\n                            '&:after': {\r\n                                top: 0,\r\n                                content: '\\'\\'',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                position: 'absolute',\r\n                                bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72)\r\n                            }\r\n                        }),\r\n                        ...(latestPostLarge && {\r\n                            pt: {\r\n                                xs: 'calc(100% * 4 / 3)',\r\n                                sm: 'calc(100% * 3 / 4.66)'\r\n                            }\r\n                        })\r\n                    }}\r\n                >\r\n                    <SvgIconStyle\r\n                        color='paper'\r\n                        src='/static/icons/shape-avatar.svg'\r\n                        sx={{\r\n                            width: 80,\r\n                            height: 36,\r\n                            zIndex: 9,\r\n                            bottom: -15,\r\n                            position: 'absolute',\r\n                            ...((latestPostLarge || latestPost) && { display: 'none' })\r\n                        }}\r\n                    />\r\n                    <AvatarStyle\r\n                        alt={author.name}\r\n                        src={author.avatarUrl}\r\n                        sx={{\r\n                            ...((latestPostLarge || latestPost) && {\r\n                                zIndex: 9,\r\n                                top: 24,\r\n                                left: 24,\r\n                                width: 40,\r\n                                height: 40\r\n                            })\r\n                        }}\r\n                    />\r\n\r\n                    <CoverImgStyle alt={title} src={cover} />\r\n                </CardMediaStyle>\r\n\r\n                <CardContent\r\n                    sx={{\r\n                        pt: 4,\r\n                        ...((latestPostLarge || latestPost) && {\r\n                            bottom: 0,\r\n                            width: '100%',\r\n                            position: 'absolute'\r\n                        })\r\n                    }}\r\n                >\r\n                    <Typography\r\n                        gutterBottom\r\n                        variant='caption'\r\n                        sx={{ color: 'text.disabled', display: 'block' }}\r\n                    >\r\n                        {fDate(createdAt)}\r\n                    </Typography>\r\n\r\n                    <TitleStyle\r\n                        to='#'\r\n                        color='inherit'\r\n                        variant='subtitle2'\r\n                        underline='hover'\r\n                        component={RouterLink}\r\n                        sx={{\r\n                            ...(latestPostLarge && { typography: 'h5', height: 60 }),\r\n                            ...((latestPostLarge || latestPost) && {\r\n                                color: 'common.white'\r\n                            })\r\n                        }}\r\n                    >\r\n                        {title}\r\n                    </TitleStyle>\r\n\r\n                    <InfoStyle>\r\n                        {POST_INFO.map((info, index) => (\r\n                            <Box\r\n                                key={index}\r\n                                sx={{\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    ml: index === 0 ? 0 : 1.5,\r\n                                    ...((latestPostLarge || latestPost) && {\r\n                                        color: 'grey.500'\r\n                                    })\r\n                                }}\r\n                            >\r\n                                <Box component={Icon} icon={info.icon} sx={{ width: 16, height: 16, mr: 0.5 }} />\r\n                                <Typography variant='caption'>{fShortenNumber(info.number)}</Typography>\r\n                            </Box>\r\n                        ))}\r\n                    </InfoStyle>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}