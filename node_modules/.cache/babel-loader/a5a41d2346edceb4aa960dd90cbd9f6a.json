{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { registerApi } from '../../api/register';\nconst initialState = {\n  pending: false,\n  success: false,\n  failed: false,\n  message: '',\n  data: {}\n};\nexport const userRegister = createAsyncThunk('register', async params => {\n  const res = await registerApi.register(params);\n  return res.data;\n});\nconst register = createSlice({\n  name: 'register',\n  initialState,\n  extraReducers: {\n    [userRegister.pending]: state => {\n      state.pending = true;\n      state.success = false;\n      state.failed = false;\n    },\n    [userRegister.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [userRegister.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    }\n  }\n});\nexport default register.reducer;","map":{"version":3,"sources":["D:/DacSanVungMienVN/dacsanvungmien_frontent/src/store/slice/register.js"],"names":["createAsyncThunk","createSlice","registerApi","initialState","pending","success","failed","message","data","userRegister","params","res","register","name","extraReducers","state","fulfilled","action","payload","rejected","error","reducer"],"mappings":"AAAA,SAAQA,gBAAR,EAA0BC,WAA1B,QAA4C,kBAA5C;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,MAAM,EAAE,KAHS;AAIjBC,EAAAA,OAAO,EAAE,EAJQ;AAKjBC,EAAAA,IAAI,EAAE;AALW,CAArB;AAOA,OAAO,MAAMC,YAAY,GAAGT,gBAAgB,CAAC,UAAD,EAAa,MAAOU,MAAP,IAAkB;AACvE,QAAMC,GAAG,GAAG,MAAMT,WAAW,CAACU,QAAZ,CAAqBF,MAArB,CAAlB;AAEA,SAAOC,GAAG,CAACH,IAAX;AACH,CAJ2C,CAArC;AAMP,MAAMI,QAAQ,GAAGX,WAAW,CAAC;AACzBY,EAAAA,IAAI,EAAE,UADmB;AAEzBV,EAAAA,YAFyB;AAGzBW,EAAAA,aAAa,EAAE;AACX,KAACL,YAAY,CAACL,OAAd,GAAyBW,KAAD,IAAW;AAC/BA,MAAAA,KAAK,CAACX,OAAN,GAAgB,IAAhB;AACAW,MAAAA,KAAK,CAACV,OAAN,GAAgB,KAAhB;AACAU,MAAAA,KAAK,CAACT,MAAN,GAAe,KAAf;AACH,KALU;AAMX,KAACG,YAAY,CAACO,SAAd,GAA0B,CAACD,KAAD,EAAQE,MAAR,KAAmB;AACzCF,MAAAA,KAAK,CAACX,OAAN,GAAgB,KAAhB;AACAW,MAAAA,KAAK,CAACV,OAAN,GAAgB,IAAhB;AACAU,MAAAA,KAAK,CAACP,IAAN,GAAaS,MAAM,CAACC,OAApB;AACH,KAVU;AAWX,KAACT,YAAY,CAACU,QAAd,GAAyB,CAACJ,KAAD,EAAQE,MAAR,KAAmB;AACxCF,MAAAA,KAAK,CAACX,OAAN,GAAgB,KAAhB;AACAW,MAAAA,KAAK,CAACT,MAAN,GAAe,IAAf;AACAS,MAAAA,KAAK,CAACR,OAAN,GAAgBU,MAAM,CAACG,KAAP,CAAab,OAA7B;AACH;AAfU;AAHU,CAAD,CAA5B;AAsBA,eAAeK,QAAQ,CAACS,OAAxB","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {registerApi} from '../../api/register';\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    success: false,\r\n    failed: false,\r\n    message: '',\r\n    data: {},\r\n};\r\nexport const userRegister = createAsyncThunk('register', async (params) => {\r\n    const res = await registerApi.register(params);\r\n\r\n    return res.data;\r\n});\r\n\r\nconst register = createSlice({\r\n    name: 'register',\r\n    initialState,\r\n    extraReducers: {\r\n        [userRegister.pending]: (state) => {\r\n            state.pending = true;\r\n            state.success = false;\r\n            state.failed = false;\r\n        },\r\n        [userRegister.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [userRegister.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default register.reducer;\r\n"]},"metadata":{},"sourceType":"module"}