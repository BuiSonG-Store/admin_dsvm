{"ast":null,"code":"var _jsxFileName = \"D:\\\\DacSanVungMienVN\\\\admin\\\\src\\\\components\\\\products\\\\CreateForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useFormik, Form, FormikProvider } from 'formik'; // material\n\nimport { InputLabel, MenuItem, Select, Stack, TextField } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { editProduct, postProduct } from '../../store/slice/products';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\nimport { getRegions } from '../../store/slice/region';\nimport { getCategory } from '../../store/slice/category';\nimport { getProvinces } from '../../store/slice/province';\nimport { getDvt } from '../../store/slice/dvt';\nimport { getWeight } from '../../store/slice/weight'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CreateForm(props) {\n  _s();\n\n  const [categories, setCategories] = useState([]);\n  const [regions, setRegions] = useState([]);\n  const [dvts, setDvt] = useState([]);\n  const [typeOfWeight, setTypeOfWeight] = useState('g');\n  const [weights, setWeight] = useState([]);\n  const [provinces, setProvinces] = useState([]);\n  const dispatch = useDispatch();\n  const productEdit = props.dataEdit.product;\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const fetchData = async () => {\n    try {\n      const res = await dispatch(getCategory());\n      const resRegion = await dispatch(getRegions());\n      const resDvt = await dispatch(getDvt());\n      const resWeight = await dispatch(getWeight());\n      setDvt(resDvt.payload);\n      setWeight(resWeight.payload);\n      setCategories(res.payload);\n      unwrapResult(res);\n      setRegions(resRegion.payload['$values']);\n      unwrapResult(resRegion);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const initialValues = {\n    Name: productEdit ? productEdit.name : '',\n    Description: productEdit ? productEdit.description : '',\n    Price: productEdit ? productEdit.price : 0.0,\n    PriceSale: productEdit ? productEdit.priceSale : 0.0,\n    CategoryId: productEdit ? productEdit.categoryId : '',\n    RegionId: productEdit ? productEdit.regionId : '',\n    ProvinceId: productEdit ? productEdit.ProvinceId : '',\n    Dvt: productEdit ? productEdit.Dvt : '',\n    Amount: productEdit ? productEdit.Amount : '',\n    Weight: productEdit ? productEdit.Weight : ''\n  };\n  const ProductSchema = Yup.object().shape({\n    Name: Yup.string().required(),\n    Description: Yup.string().required(),\n    Price: Yup.number().required(),\n    PriceSale: Yup.number(),\n    CategoryId: Yup.number().required(),\n    RegionId: Yup.number().required(),\n    ProvinceId: Yup.number().required(),\n    Dvt: Yup.string().required(),\n    Amount: Yup.number().required(),\n    Weight: Yup.string().required()\n  });\n  const formik = useFormik({\n    initialValues,\n    validationSchema: ProductSchema,\n    onSubmit: async (values, _ref) => {\n      let {\n        resetForm\n      } = _ref;\n\n      try {\n        const res = (await productEdit) ? dispatch(editProduct({\n          id: productEdit.id,\n          Name: values.Name,\n          Description: values.Description,\n          Price: values.Price,\n          PriceSale: values.PriceSale,\n          CategoryId: values.CategoryId,\n          RegionId: values.RegionId,\n          ProvinceId: values.ProvinceId,\n          Amount: values.Amount,\n          Dvt: values.Dvt,\n          Weight: `${values.Weight}/${typeOfWeight}`\n        })) : dispatch(postProduct({\n          Name: values.Name,\n          Description: values.Description,\n          Price: values.Price,\n          PriceSale: values.PriceSale,\n          CategoryId: values.CategoryId,\n          RegionId: values.RegionId,\n          ProvinceId: values.ProvinceId,\n          Amount: values.Amount,\n          Dvt: values.Dvt,\n          Weight: `${values.Weight}${typeOfWeight}`\n        }));\n        unwrapResult(res);\n        props.handleFormSubmit(productEdit);\n        resetForm();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  });\n  const {\n    errors,\n    touched,\n    values,\n    isSubmitting,\n    handleSubmit,\n    getFieldProps\n  } = formik;\n\n  const renderCategory = (values, getFieldProps) => {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      style: {\n        width: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: values.CategoryId // onChange={(e) => handleSelectProvince(e)}\n        ,\n        ...getFieldProps('CategoryId'),\n        children: categories.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderRegion = (values, getFieldProps) => {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      style: {\n        width: '35%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        children: \"Region\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: values.RegionId,\n        ...getFieldProps('RegionId'),\n        children: regions.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          onClick: async () => {\n            console.log('region');\n\n            try {\n              const province = await dispatch(getProvinces(item.id));\n              unwrapResult(province);\n              setProvinces(province.payload.province['$values']);\n            } catch (e) {\n              console.log(e);\n            }\n          },\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderProvince = (values, getFieldProps) => {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      style: {\n        width: '60%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        children: \"Province\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: values.ProvinceId,\n        ...getFieldProps('ProvinceId'),\n        children: provinces.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.id,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderDvt = (values, getFieldProps) => {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      style: {\n        width: 200\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        children: \"\\u0110\\u01A1n v\\u1ECB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        labelId: \"demo-simple-select-label\",\n        id: \"demo-simple-select\",\n        value: values.Dvt,\n        ...getFieldProps('Dvt'),\n        children: dvts.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: item.name,\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this);\n  };\n\n  const renderWeight = (values, getFieldProps) => {\n    return /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      style: {\n        width: 350\n      },\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        id: \"demo-simple-select-label\",\n        children: \"Kh\\u1ED1i l\\u01B0\\u1EE3ng\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"Weight\",\n          type: \"text\",\n          label: \"Weight\",\n          value: values.Weight,\n          ...getFieldProps('Weight'),\n          error: Boolean(touched.Weight && errors.Weight),\n          helperText: touched.Weight && errors.Weight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"demo-simple-select\",\n          value: typeOfWeight,\n          style: {\n            height: 56,\n            borderRadius: 8,\n            border: '0.5px solid #dce0e4',\n            lineHeight: '1.4375em',\n            fontSize: '1rem',\n            fontFamily: 'Public Sans,sans-serif',\n            fontWeight: 400,\n            padding: 14,\n            width: 110\n          },\n          onChange: e => setTypeOfWeight(e.target.value),\n          children: weights.map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: item.name,\n            children: item.name\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormikProvider, {\n    value: formik,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      autoComplete: \"off\",\n      noValidate: true,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          autoComplete: \"productName\",\n          type: \"text\",\n          label: \"Name\",\n          value: values.Name,\n          ...getFieldProps('Name'),\n          error: Boolean(touched.Name && errors.Name),\n          helperText: touched.Name && errors.Name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          autoComplete: \"productDescription\",\n          value: values.Description,\n          ...getFieldProps('Description'),\n          error: Boolean(touched.Description && errors.Description),\n          helperText: touched.Description && errors.Description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"Price\",\n            type: \"number\",\n            label: \"Price\",\n            value: values.Price,\n            style: {\n              maxWidth: 300\n            },\n            ...getFieldProps('Price'),\n            error: Boolean(touched.Price && errors.Price),\n            helperText: touched.Price && errors.Price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"PriceSale\",\n            type: \"number\",\n            label: \"PriceSale\",\n            style: {\n              maxWidth: 300\n            },\n            value: values.PriceSale,\n            ...getFieldProps('PriceSale'),\n            error: Boolean(touched.PriceSale && errors.PriceSale),\n            helperText: touched.PriceSale && errors.PriceSale\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            autoComplete: \"Amount\",\n            type: \"number\",\n            label: \"Amount\",\n            style: {\n              maxWidth: 300\n            },\n            value: values.Amount,\n            ...getFieldProps('Amount'),\n            error: Boolean(touched.Amount && errors.Amount),\n            helperText: touched.Amount && errors.Amount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [renderCategory(values, getFieldProps), renderDvt(values, getFieldProps), renderWeight(values, getFieldProps)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [renderRegion(values, getFieldProps), renderProvince(values, getFieldProps)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        fullWidth: true,\n        size: \"large\",\n        type: \"submit\",\n        variant: \"contained\",\n        loading: isSubmitting,\n        style: {\n          marginTop: 30\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 259,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateForm, \"EAWX63ibKfo59fMZYKFMzthKWsg=\", false, function () {\n  return [useDispatch, useFormik];\n});\n\n_c = CreateForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateForm\");","map":{"version":3,"sources":["D:/DacSanVungMienVN/admin/src/components/products/CreateForm.js"],"names":["Yup","useFormik","Form","FormikProvider","InputLabel","MenuItem","Select","Stack","TextField","LoadingButton","editProduct","postProduct","unwrapResult","useDispatch","useEffect","useState","getRegions","getCategory","getProvinces","getDvt","getWeight","CreateForm","props","categories","setCategories","regions","setRegions","dvts","setDvt","typeOfWeight","setTypeOfWeight","weights","setWeight","provinces","setProvinces","dispatch","productEdit","dataEdit","product","fetchData","res","resRegion","resDvt","resWeight","payload","e","console","log","initialValues","Name","name","Description","description","Price","price","PriceSale","priceSale","CategoryId","categoryId","RegionId","regionId","ProvinceId","Dvt","Amount","Weight","ProductSchema","object","shape","string","required","number","formik","validationSchema","onSubmit","values","resetForm","id","handleFormSubmit","errors","touched","isSubmitting","handleSubmit","getFieldProps","renderCategory","width","map","item","renderRegion","province","renderProvince","renderDvt","renderWeight","display","Boolean","height","borderRadius","border","lineHeight","fontSize","fontFamily","fontWeight","padding","target","value","justifyContent","maxWidth","marginTop"],"mappings":";;;AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,cAA1B,QAAgD,QAAhD,C,CACA;;AACA,SACIC,UADJ,EACgBC,QADhB,EAC0BC,MAD1B,EAEIC,KAFJ,EAGIC,SAHJ,QAIO,eAJP;AAKA,SAASC,aAAT,QAA8B,UAA9B;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,4BAAvC;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,SAAQC,UAAR,QAAyB,0BAAzB;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,SAAQC,YAAR,QAA2B,4BAA3B;AACA,SAAQC,MAAR,QAAqB,uBAArB;AACA,SAAQC,SAAR,QAAwB,0BAAxB,C,CACA;;;AAEA,eAAe,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACtC,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACY,IAAD,EAAOC,MAAP,IAAiBb,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,GAAD,CAAhD;AACA,QAAM,CAACgB,OAAD,EAAUC,SAAV,IAAuBjB,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAMoB,QAAQ,GAACtB,WAAW,EAA1B;AACA,QAAMuB,WAAW,GAACd,KAAK,CAACe,QAAN,CAAeC,OAAjC;AAEAxB,EAAAA,SAAS,CAAC,MAAM;AACZyB,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,SAAS,GAAG,YAAY;AAC1B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAML,QAAQ,CAAClB,WAAW,EAAZ,CAA1B;AACA,YAAMwB,SAAS,GAAG,MAAMN,QAAQ,CAACnB,UAAU,EAAX,CAAhC;AACA,YAAM0B,MAAM,GAAG,MAAMP,QAAQ,CAAChB,MAAM,EAAP,CAA7B;AACA,YAAMwB,SAAS,GAAC,MAAMR,QAAQ,CAACf,SAAS,EAAV,CAA9B;AACAQ,MAAAA,MAAM,CAACc,MAAM,CAACE,OAAR,CAAN;AACAZ,MAAAA,SAAS,CAACW,SAAS,CAACC,OAAX,CAAT;AACApB,MAAAA,aAAa,CAACgB,GAAG,CAACI,OAAL,CAAb;AACAhC,MAAAA,YAAY,CAAC4B,GAAD,CAAZ;AACAd,MAAAA,UAAU,CAACe,SAAS,CAACG,OAAV,CAAkB,SAAlB,CAAD,CAAV;AACAhC,MAAAA,YAAY,CAAC6B,SAAD,CAAZ;AACH,KAXD,CAWE,OAAOI,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAfD;;AAmBA,QAAMG,aAAa,GAAC;AAChBC,IAAAA,IAAI,EAAEb,WAAW,GAACA,WAAW,CAACc,IAAb,GAAkB,EADnB;AAEhBC,IAAAA,WAAW,EAAEf,WAAW,GAACA,WAAW,CAACgB,WAAb,GAAyB,EAFjC;AAGhBC,IAAAA,KAAK,EAAEjB,WAAW,GAACA,WAAW,CAACkB,KAAb,GAAmB,GAHrB;AAIhBC,IAAAA,SAAS,EAACnB,WAAW,GAACA,WAAW,CAACoB,SAAb,GAAuB,GAJ5B;AAKhBC,IAAAA,UAAU,EAACrB,WAAW,GAACA,WAAW,CAACsB,UAAb,GAAwB,EAL9B;AAMhBC,IAAAA,QAAQ,EAACvB,WAAW,GAACA,WAAW,CAACwB,QAAb,GAAsB,EAN1B;AAOhBC,IAAAA,UAAU,EAACzB,WAAW,GAACA,WAAW,CAACyB,UAAb,GAAwB,EAP9B;AAQhBC,IAAAA,GAAG,EAAC1B,WAAW,GAACA,WAAW,CAAC0B,GAAb,GAAiB,EARhB;AAShBC,IAAAA,MAAM,EAAC3B,WAAW,GAACA,WAAW,CAAC2B,MAAb,GAAoB,EATtB;AAUhBC,IAAAA,MAAM,EAAC5B,WAAW,GAACA,WAAW,CAAC4B,MAAb,GAAoB;AAVtB,GAApB;AAaA,QAAMC,aAAa,GAAGjE,GAAG,CAACkE,MAAJ,GAAaC,KAAb,CAAmB;AACrClB,IAAAA,IAAI,EAAEjD,GAAG,CAACoE,MAAJ,GAAaC,QAAb,EAD+B;AAErClB,IAAAA,WAAW,EAAEnD,GAAG,CAACoE,MAAJ,GAAaC,QAAb,EAFwB;AAGrChB,IAAAA,KAAK,EAAErD,GAAG,CAACsE,MAAJ,GAAaD,QAAb,EAH8B;AAIrCd,IAAAA,SAAS,EAAEvD,GAAG,CAACsE,MAAJ,EAJ0B;AAKrCb,IAAAA,UAAU,EAAEzD,GAAG,CAACsE,MAAJ,GAAaD,QAAb,EALyB;AAMrCV,IAAAA,QAAQ,EAAE3D,GAAG,CAACsE,MAAJ,GAAaD,QAAb,EAN2B;AAOrCR,IAAAA,UAAU,EAAE7D,GAAG,CAACsE,MAAJ,GAAaD,QAAb,EAPyB;AAQrCP,IAAAA,GAAG,EAAE9D,GAAG,CAACoE,MAAJ,GAAaC,QAAb,EARgC;AASrCN,IAAAA,MAAM,EAAE/D,GAAG,CAACsE,MAAJ,GAAaD,QAAb,EAT6B;AAUrCL,IAAAA,MAAM,EAAEhE,GAAG,CAACoE,MAAJ,GAAaC,QAAb;AAV6B,GAAnB,CAAtB;AAcA,QAAME,MAAM,GAAGtE,SAAS,CAAC;AACrB+C,IAAAA,aADqB;AAErBwB,IAAAA,gBAAgB,EAAEP,aAFG;AAIrBQ,IAAAA,QAAQ,EAAE,OAAOC,MAAP,WAA8B;AAAA,UAAhB;AAACC,QAAAA;AAAD,OAAgB;;AACpC,UAAI;AACA,cAAMnC,GAAG,GAAG,OAAMJ,WAAN,IACRD,QAAQ,CAACzB,WAAW,CAAC;AACjBkE,UAAAA,EAAE,EAACxC,WAAW,CAACwC,EADE;AAEjB3B,UAAAA,IAAI,EAAEyB,MAAM,CAACzB,IAFI;AAGjBE,UAAAA,WAAW,EAAEuB,MAAM,CAACvB,WAHH;AAIjBE,UAAAA,KAAK,EAAEqB,MAAM,CAACrB,KAJG;AAKjBE,UAAAA,SAAS,EAAEmB,MAAM,CAACnB,SALD;AAMjBE,UAAAA,UAAU,EAAEiB,MAAM,CAACjB,UANF;AAOjBE,UAAAA,QAAQ,EAAEe,MAAM,CAACf,QAPA;AAQjBE,UAAAA,UAAU,EAAEa,MAAM,CAACb,UARF;AASjBE,UAAAA,MAAM,EAAEW,MAAM,CAACX,MATE;AAUjBD,UAAAA,GAAG,EAACY,MAAM,CAACZ,GAVM;AAWjBE,UAAAA,MAAM,EAAG,GAAEU,MAAM,CAACV,MAAO,IAAGnC,YAAa;AAXxB,SAAD,CAAZ,CADA,GAePM,QAAQ,CAACxB,WAAW,CAAC;AAClBsC,UAAAA,IAAI,EAAEyB,MAAM,CAACzB,IADK;AAElBE,UAAAA,WAAW,EAAEuB,MAAM,CAACvB,WAFF;AAGlBE,UAAAA,KAAK,EAAEqB,MAAM,CAACrB,KAHI;AAIlBE,UAAAA,SAAS,EAAEmB,MAAM,CAACnB,SAJA;AAKlBE,UAAAA,UAAU,EAAEiB,MAAM,CAACjB,UALD;AAMlBE,UAAAA,QAAQ,EAAEe,MAAM,CAACf,QANC;AAOlBE,UAAAA,UAAU,EAAEa,MAAM,CAACb,UAPD;AAQlBE,UAAAA,MAAM,EAAEW,MAAM,CAACX,MARG;AASlBD,UAAAA,GAAG,EAACY,MAAM,CAACZ,GATO;AAUlBE,UAAAA,MAAM,EAAG,GAAEU,MAAM,CAACV,MAAO,GAAEnC,YAAa;AAVtB,SAAD,CAAZ,CAfb;AA4BAjB,QAAAA,YAAY,CAAC4B,GAAD,CAAZ;AACAlB,QAAAA,KAAK,CAACuD,gBAAN,CAAuBzC,WAAvB;AACAuC,QAAAA,SAAS;AACZ,OAhCD,CAgCE,OAAO9B,CAAP,EAAU;AACRC,QAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ;AAxCoB,GAAD,CAAxB;AA2CA,QAAM;AAAEiC,IAAAA,MAAF;AAAUC,IAAAA,OAAV;AAAmBL,IAAAA,MAAnB;AAA2BM,IAAAA,YAA3B;AAAyCC,IAAAA,YAAzC;AAAuDC,IAAAA;AAAvD,MAAyEX,MAA/E;;AAEA,QAAMY,cAAc,GAAG,CAACT,MAAD,EAAQQ,aAAR,KAA0B;AAC7C,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC;AAAP,OAA1B;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,0BADZ;AAEI,QAAA,EAAE,EAAC,oBAFP;AAGI,QAAA,KAAK,EAAEV,MAAM,CAACjB,UAHlB,CAII;AAJJ;AAAA,WAKQyB,aAAa,CAAC,YAAD,CALrB;AAAA,kBAQK3D,UAAU,CAAC8D,GAAX,CAAgBC,IAAD,iBACZ,QAAC,QAAD;AAAwB,UAAA,KAAK,EAAEA,IAAI,CAACV,EAApC;AAAA,oBAAyCU,IAAI,CAACpC;AAA9C,WAAeoC,IAAI,CAACV,EAApB;AAAA;AAAA;AAAA;AAAA,gBADH;AARL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAkBH,GAnBD;;AAqBA,QAAMW,YAAY,GAAG,CAACb,MAAD,EAAQQ,aAAR,KAA0B;AAC3C,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC;AAAP,OAA1B;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,0BADZ;AAEI,QAAA,EAAE,EAAC,oBAFP;AAGI,QAAA,KAAK,EAAEV,MAAM,CAACf,QAHlB;AAAA,WAIQuB,aAAa,CAAC,UAAD,CAJrB;AAAA,kBAOKzD,OAAO,CAAC4D,GAAR,CAAaC,IAAD,iBACT,QAAC,QAAD;AAAU,UAAA,OAAO,EAAG,YAAU;AAC1BxC,YAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,gBAAI;AACA,oBAAMyC,QAAQ,GAAE,MAAMrD,QAAQ,CAACjB,YAAY,CAACoE,IAAI,CAACV,EAAN,CAAb,CAA9B;AACAhE,cAAAA,YAAY,CAAC4E,QAAD,CAAZ;AACAtD,cAAAA,YAAY,CAACsD,QAAQ,CAAC5C,OAAT,CAAiB4C,QAAjB,CAA0B,SAA1B,CAAD,CAAZ;AACH,aAJD,CAIC,OAAO3C,CAAP,EAAS;AACNC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AAEJ,WAVD;AAUiB,UAAA,KAAK,EAAEyC,IAAI,CAACV,EAV7B;AAAA,oBAUkCU,IAAI,CAACpC;AAVvC,WAUQoC,IAAI,CAACV,EAVb;AAAA;AAAA;AAAA;AAAA,gBADH;AAPL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH,GA5BD;;AA8BA,QAAMa,cAAc,GAAG,CAACf,MAAD,EAAQQ,aAAR,KAA0B;AAC7C,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC;AAAP,OAA1B;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,0BADZ;AAEI,QAAA,EAAE,EAAC,oBAFP;AAGI,QAAA,KAAK,EAAEV,MAAM,CAACb,UAHlB;AAAA,WAIQqB,aAAa,CAAC,YAAD,CAJrB;AAAA,kBAOKjD,SAAS,CAACoD,GAAV,CAAeC,IAAD,iBACX,QAAC,QAAD;AAAwB,UAAA,KAAK,EAAEA,IAAI,CAACV,EAApC;AAAA,oBAAyCU,IAAI,CAACpC;AAA9C,WAAeoC,IAAI,CAACV,EAApB;AAAA;AAAA;AAAA;AAAA,gBADH;AAPL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiBH,GAlBD;;AAqBA,QAAMc,SAAS,GAAG,CAAChB,MAAD,EAAQQ,aAAR,KAA0B;AACxC,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC;AAAP,OAA1B;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAC,0BADZ;AAEI,QAAA,EAAE,EAAC,oBAFP;AAGI,QAAA,KAAK,EAAEV,MAAM,CAACZ,GAHlB;AAAA,WAIQoB,aAAa,CAAC,KAAD,CAJrB;AAAA,kBAMKvD,IAAI,CAAC0D,GAAL,CAAUC,IAAD,iBACN,QAAC,QAAD;AAAwB,UAAA,KAAK,EAAEA,IAAI,CAACpC,IAApC;AAAA,oBAA4CoC,IAAI,CAACpC;AAAjD,WAAeoC,IAAI,CAACV,EAApB;AAAA;AAAA;AAAA;AAAA,gBADH;AANL;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAeH,GAhBD;;AAkBA,QAAMe,YAAY,GAAG,CAACjB,MAAD,EAAQQ,aAAR,KAA0B;AAC3C,wBACI,QAAC,KAAD;AAAO,MAAA,OAAO,EAAE,CAAhB;AAAmB,MAAA,KAAK,EAAE;AAACE,QAAAA,KAAK,EAAC;AAAP,OAA1B;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,KAAK,EAAE;AACRQ,UAAAA,OAAO,EAAC;AADA,SAAZ;AAAA,gCAGI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,YAAY,EAAC,QAFjB;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,KAAK,EAAC,QAJV;AAKI,UAAA,KAAK,EAAElB,MAAM,CAACV,MALlB;AAAA,aAMQkB,aAAa,CAAC,QAAD,CANrB;AAOI,UAAA,KAAK,EAAEW,OAAO,CAACd,OAAO,CAACf,MAAR,IAAkBc,MAAM,CAACd,MAA1B,CAPlB;AAQI,UAAA,UAAU,EAAEe,OAAO,CAACf,MAAR,IAAkBc,MAAM,CAACd;AARzC;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAaI;AAAQ,UAAA,EAAE,EAAC,oBAAX;AACI,UAAA,KAAK,EAAEnC,YADX;AAEI,UAAA,KAAK,EAAE;AACHiE,YAAAA,MAAM,EAAC,EADJ;AAEHC,YAAAA,YAAY,EAAC,CAFV;AAGHC,YAAAA,MAAM,EAAC,qBAHJ;AAIHC,YAAAA,UAAU,EAAE,UAJT;AAKHC,YAAAA,QAAQ,EAAE,MALP;AAMHC,YAAAA,UAAU,EAAE,wBANT;AAOHC,YAAAA,UAAU,EAAE,GAPT;AAQHC,YAAAA,OAAO,EAAC,EARL;AASHjB,YAAAA,KAAK,EAAC;AATH,WAFX;AAaI,UAAA,QAAQ,EAAGvC,CAAD,IAAKf,eAAe,CAACe,CAAC,CAACyD,MAAF,CAASC,KAAV,CAblC;AAAA,oBAeKxE,OAAO,CAACsD,GAAR,CAAYC,IAAI,iBACb;AAAsB,YAAA,KAAK,EAAEA,IAAI,CAACpC,IAAlC;AAAA,sBAA0CoC,IAAI,CAACpC;AAA/C,aAAaoC,IAAI,CAACV,EAAlB;AAAA;AAAA;AAAA;AAAA,kBADH;AAfL;AAAA;AAAA;AAAA;AAAA,gBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAsCH,GAvCD;;AAyCA,sBACI,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEL,MAAvB;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,YAAY,EAAC,KAAnB;AAAyB,MAAA,UAAU,MAAnC;AAAoC,MAAA,QAAQ,EAAEU,YAA9C;AAAA,8BACI,QAAC,KAAD;AAAO,QAAA,OAAO,EAAE,CAAhB;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,SAAS,MADb;AAEI,UAAA,YAAY,EAAC,aAFjB;AAGI,UAAA,IAAI,EAAC,MAHT;AAII,UAAA,KAAK,EAAC,MAJV;AAKI,UAAA,KAAK,EAAEP,MAAM,CAACzB,IALlB;AAAA,aAMQiC,aAAa,CAAC,MAAD,CANrB;AAOI,UAAA,KAAK,EAAEW,OAAO,CAACd,OAAO,CAAC9B,IAAR,IAAgB6B,MAAM,CAAC7B,IAAxB,CAPlB;AAQI,UAAA,UAAU,EAAE8B,OAAO,CAAC9B,IAAR,IAAgB6B,MAAM,CAAC7B;AARvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AACI,UAAA,YAAY,EAAC,oBADjB;AAEI,UAAA,KAAK,EAAEyB,MAAM,CAACvB,WAFlB;AAAA,aAGQ+B,aAAa,CAAC,aAAD,CAHrB;AAII,UAAA,KAAK,EAAEW,OAAO,CAACd,OAAO,CAAC5B,WAAR,IAAuB2B,MAAM,CAAC3B,WAA/B,CAJlB;AAKI,UAAA,UAAU,EAAE4B,OAAO,CAAC5B,WAAR,IAAuB2B,MAAM,CAAC3B;AAL9C;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAkBI;AAAK,UAAA,KAAK,EAAE;AACRyC,YAAAA,OAAO,EAAC,MADA;AAERY,YAAAA,cAAc,EAAC;AAFP,WAAZ;AAAA,kCAII,QAAC,SAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,YAAY,EAAC,OAFjB;AAGI,YAAA,IAAI,EAAC,QAHT;AAII,YAAA,KAAK,EAAC,OAJV;AAKI,YAAA,KAAK,EAAE9B,MAAM,CAACrB,KALlB;AAMI,YAAA,KAAK,EAAE;AAACoD,cAAAA,QAAQ,EAAC;AAAV,aANX;AAAA,eAOQvB,aAAa,CAAC,OAAD,CAPrB;AAQI,YAAA,KAAK,EAAEW,OAAO,CAACd,OAAO,CAAC1B,KAAR,IAAiByB,MAAM,CAACzB,KAAzB,CARlB;AASI,YAAA,UAAU,EAAE0B,OAAO,CAAC1B,KAAR,IAAiByB,MAAM,CAACzB;AATxC;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAeI,QAAC,SAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,YAAY,EAAC,WAFjB;AAGI,YAAA,IAAI,EAAC,QAHT;AAII,YAAA,KAAK,EAAC,WAJV;AAKI,YAAA,KAAK,EAAE;AAACoD,cAAAA,QAAQ,EAAC;AAAV,aALX;AAMI,YAAA,KAAK,EAAE/B,MAAM,CAACnB,SANlB;AAAA,eAOQ2B,aAAa,CAAC,WAAD,CAPrB;AAQI,YAAA,KAAK,EAAEW,OAAO,CAACd,OAAO,CAACxB,SAAR,IAAqBuB,MAAM,CAACvB,SAA7B,CARlB;AASI,YAAA,UAAU,EAAEwB,OAAO,CAACxB,SAAR,IAAqBuB,MAAM,CAACvB;AAT5C;AAAA;AAAA;AAAA;AAAA,kBAfJ,eA0BI,QAAC,SAAD;AACI,YAAA,SAAS,MADb;AAEI,YAAA,YAAY,EAAC,QAFjB;AAGI,YAAA,IAAI,EAAC,QAHT;AAII,YAAA,KAAK,EAAC,QAJV;AAKI,YAAA,KAAK,EAAE;AAACkD,cAAAA,QAAQ,EAAC;AAAV,aALX;AAMI,YAAA,KAAK,EAAE/B,MAAM,CAACX,MANlB;AAAA,eAOQmB,aAAa,CAAC,QAAD,CAPrB;AAQI,YAAA,KAAK,EAAEW,OAAO,CAACd,OAAO,CAAChB,MAAR,IAAkBe,MAAM,CAACf,MAA1B,CARlB;AASI,YAAA,UAAU,EAAEgB,OAAO,CAAChB,MAAR,IAAkBe,MAAM,CAACf;AATzC;AAAA;AAAA;AAAA;AAAA,kBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBJ,eAyDI;AAAK,UAAA,KAAK,EAAE;AAAC6B,YAAAA,OAAO,EAAC,MAAT;AAAgBY,YAAAA,cAAc,EAAC;AAA/B,WAAZ;AAAA,qBACKrB,cAAc,CAACT,MAAD,EAAQQ,aAAR,CADnB,EAEKQ,SAAS,CAAChB,MAAD,EAAQQ,aAAR,CAFd,EAGKS,YAAY,CAACjB,MAAD,EAAQQ,aAAR,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAzDJ,eA+DI;AAAK,UAAA,KAAK,EAAE;AAACU,YAAAA,OAAO,EAAC,MAAT;AAAgBY,YAAAA,cAAc,EAAC;AAA/B,WAAZ;AAAA,qBACKjB,YAAY,CAACb,MAAD,EAAQQ,aAAR,CADjB,EAEKO,cAAc,CAACf,MAAD,EAAQQ,aAAR,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/DJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAuEI,QAAC,aAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,IAAI,EAAC,QAHT;AAII,QAAA,OAAO,EAAC,WAJZ;AAKI,QAAA,OAAO,EAAEF,YALb;AAMI,QAAA,KAAK,EAAE;AACH0B,UAAAA,SAAS,EAAC;AADP,SANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwFH;;GArUuBrF,U;UAOLR,W,EAsDAZ,S;;;KA7DKoB,U","sourcesContent":["import * as Yup from 'yup';\r\nimport { useFormik, Form, FormikProvider } from 'formik';\r\n// material\r\nimport {\r\n    InputLabel, MenuItem, Select,\r\n    Stack,\r\n    TextField,\r\n} from '@mui/material';\r\nimport { LoadingButton } from '@mui/lab';\r\nimport {editProduct, postProduct} from '../../store/slice/products';\r\nimport { unwrapResult } from '@reduxjs/toolkit';\r\nimport { useDispatch } from 'react-redux';\r\nimport {useEffect, useState} from 'react';\r\nimport {getRegions} from '../../store/slice/region';\r\nimport {getCategory} from '../../store/slice/category';\r\nimport {getProvinces} from '../../store/slice/province';\r\nimport {getDvt} from '../../store/slice/dvt';\r\nimport {getWeight} from '../../store/slice/weight';\r\n// ----------------------------------------------------------------------\r\n\r\nexport default function CreateForm(props) {\r\n    const [categories, setCategories] = useState([]);\r\n    const [regions, setRegions] = useState([]);\r\n    const [dvts, setDvt] = useState([]);\r\n    const [typeOfWeight, setTypeOfWeight] = useState('g');\r\n    const [weights, setWeight] = useState([]);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const dispatch=useDispatch();\r\n    const productEdit=props.dataEdit.product;\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n\r\n    const fetchData = async () => {\r\n        try {\r\n            const res = await dispatch(getCategory());\r\n            const resRegion = await dispatch(getRegions());\r\n            const resDvt = await dispatch(getDvt());\r\n            const resWeight=await dispatch(getWeight());\r\n            setDvt(resDvt.payload);\r\n            setWeight(resWeight.payload);\r\n            setCategories(res.payload);\r\n            unwrapResult(res);\r\n            setRegions(resRegion.payload['$values']);\r\n            unwrapResult(resRegion);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n\r\n\r\n    const initialValues={\r\n        Name: productEdit?productEdit.name:'',\r\n        Description: productEdit?productEdit.description:'',\r\n        Price: productEdit?productEdit.price:0.0,\r\n        PriceSale:productEdit?productEdit.priceSale:0.0,\r\n        CategoryId:productEdit?productEdit.categoryId:'',\r\n        RegionId:productEdit?productEdit.regionId:'',\r\n        ProvinceId:productEdit?productEdit.ProvinceId:'',\r\n        Dvt:productEdit?productEdit.Dvt:'',\r\n        Amount:productEdit?productEdit.Amount:'',\r\n        Weight:productEdit?productEdit.Weight:'',\r\n    };\r\n\r\n    const ProductSchema = Yup.object().shape({\r\n        Name: Yup.string().required(),\r\n        Description: Yup.string().required(),\r\n        Price: Yup.number().required(),\r\n        PriceSale: Yup.number(),\r\n        CategoryId: Yup.number().required(),\r\n        RegionId: Yup.number().required(),\r\n        ProvinceId: Yup.number().required(),\r\n        Dvt: Yup.string().required(),\r\n        Amount: Yup.number().required(),\r\n        Weight: Yup.string().required(),\r\n\r\n    });\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        validationSchema: ProductSchema,\r\n\r\n        onSubmit: async (values,{resetForm}) => {\r\n            try {\r\n                const res = await productEdit ?\r\n                    dispatch(editProduct({\r\n                        id:productEdit.id,\r\n                        Name: values.Name,\r\n                        Description: values.Description,\r\n                        Price: values.Price,\r\n                        PriceSale: values.PriceSale,\r\n                        CategoryId: values.CategoryId,\r\n                        RegionId: values.RegionId,\r\n                        ProvinceId: values.ProvinceId,\r\n                        Amount: values.Amount,\r\n                        Dvt:values.Dvt,\r\n                        Weight: `${values.Weight}/${typeOfWeight}`\r\n                    }))\r\n\r\n                    :dispatch(postProduct({\r\n                        Name: values.Name,\r\n                        Description: values.Description,\r\n                        Price: values.Price,\r\n                        PriceSale: values.PriceSale,\r\n                        CategoryId: values.CategoryId,\r\n                        RegionId: values.RegionId,\r\n                        ProvinceId: values.ProvinceId,\r\n                        Amount: values.Amount,\r\n                        Dvt:values.Dvt,\r\n                        Weight: `${values.Weight}${typeOfWeight}`\r\n                    }))\r\n                ;\r\n                unwrapResult(res);\r\n                props.handleFormSubmit(productEdit);\r\n                resetForm();\r\n            } catch (e) {\r\n                console.log(e);\r\n            }\r\n        }\r\n    });\r\n\r\n    const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\r\n\r\n    const renderCategory = (values,getFieldProps) => {\r\n        return (\r\n            <Stack spacing={3} style={{width:400}}>\r\n                <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.CategoryId}\r\n                    // onChange={(e) => handleSelectProvince(e)}\r\n                    {...getFieldProps('CategoryId')}\r\n\r\n                >\r\n                    {categories.map((item) => (\r\n                        <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\r\n                    ))}\r\n\r\n                </Select>\r\n            </Stack>\r\n        );\r\n    };\r\n\r\n    const renderRegion = (values,getFieldProps) => {\r\n        return (\r\n            <Stack spacing={3} style={{width:'35%'}}>\r\n                <InputLabel id=\"demo-simple-select-label\">Region</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.RegionId}\r\n                    {...getFieldProps('RegionId')}\r\n\r\n                >\r\n                    {regions.map((item) => (\r\n                        <MenuItem onClick={ async ()=>{\r\n                            console.log('region');\r\n                            try {\r\n                                const province =await dispatch(getProvinces(item.id));\r\n                                unwrapResult(province);\r\n                                setProvinces(province.payload.province['$values']);\r\n                            }catch (e){\r\n                                console.log(e);\r\n                            }\r\n\r\n                        }} key={item.id} value={item.id}>{item.name}</MenuItem>\r\n                    ))}\r\n\r\n                </Select>\r\n            </Stack>\r\n        );\r\n    };\r\n\r\n    const renderProvince = (values,getFieldProps) => {\r\n        return (\r\n            <Stack spacing={3} style={{width:'60%'}}>\r\n                <InputLabel id=\"demo-simple-select-label\">Province</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.ProvinceId}\r\n                    {...getFieldProps('ProvinceId')}\r\n\r\n                >\r\n                    {provinces.map((item) => (\r\n                        <MenuItem key={item.id} value={item.id}>{item.name}</MenuItem>\r\n                    ))}\r\n\r\n                </Select>\r\n            </Stack>\r\n        );\r\n    };\r\n\r\n\r\n    const renderDvt = (values,getFieldProps) => {\r\n        return (\r\n            <Stack spacing={3} style={{width:200}}>\r\n                <InputLabel id=\"demo-simple-select-label\">Đơn vị</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={values.Dvt}\r\n                    {...getFieldProps('Dvt')}\r\n                >\r\n                    {dvts.map((item) => (\r\n                        <MenuItem key={item.id} value={item.name} >{item.name}</MenuItem>\r\n                    ))}\r\n                </Select>\r\n            </Stack>\r\n        );\r\n    };\r\n\r\n    const renderWeight = (values,getFieldProps) => {\r\n        return (\r\n            <Stack spacing={3} style={{width:350}}>\r\n                <InputLabel id=\"demo-simple-select-label\">Khối lượng</InputLabel>\r\n                <div style={{\r\n                    display:'flex',\r\n                }}>\r\n                    <TextField\r\n                        fullWidth\r\n                        autoComplete='Weight'\r\n                        type='text'\r\n                        label='Weight'\r\n                        value={values.Weight}\r\n                        {...getFieldProps('Weight')}\r\n                        error={Boolean(touched.Weight && errors.Weight)}\r\n                        helperText={touched.Weight && errors.Weight}\r\n                    />\r\n                    <select id=\"demo-simple-select\"\r\n                        value={typeOfWeight}\r\n                        style={{\r\n                            height:56,\r\n                            borderRadius:8,\r\n                            border:'0.5px solid #dce0e4',\r\n                            lineHeight: '1.4375em',\r\n                            fontSize: '1rem',\r\n                            fontFamily: 'Public Sans,sans-serif',\r\n                            fontWeight: 400,\r\n                            padding:14,\r\n                            width:110\r\n                        }}\r\n                        onChange={(e)=>setTypeOfWeight(e.target.value)}\r\n                    >\r\n                        {weights.map(item=>(\r\n                            <option key={item.id} value={item.name} >{item.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n            </Stack>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <FormikProvider value={formik}>\r\n            <Form autoComplete='off' noValidate onSubmit={handleSubmit}>\r\n                <Stack spacing={3}>\r\n                    <TextField\r\n                        fullWidth\r\n                        autoComplete='productName'\r\n                        type='text'\r\n                        label='Name'\r\n                        value={values.Name}\r\n                        {...getFieldProps('Name')}\r\n                        error={Boolean(touched.Name && errors.Name)}\r\n                        helperText={touched.Name && errors.Name}\r\n                    />\r\n                    <textarea\r\n                        autoComplete='productDescription'\r\n                        value={values.Description}\r\n                        {...getFieldProps('Description')}\r\n                        error={Boolean(touched.Description && errors.Description)}\r\n                        helperText={touched.Description && errors.Description}\r\n                    />\r\n                    <div style={{\r\n                        display:'flex',\r\n                        justifyContent:'space-between'\r\n                    }}>\r\n                        <TextField\r\n                            fullWidth\r\n                            autoComplete='Price'\r\n                            type='number'\r\n                            label='Price'\r\n                            value={values.Price}\r\n                            style={{maxWidth:300}}\r\n                            {...getFieldProps('Price')}\r\n                            error={Boolean(touched.Price && errors.Price)}\r\n                            helperText={touched.Price && errors.Price}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            autoComplete='PriceSale'\r\n                            type='number'\r\n                            label='PriceSale'\r\n                            style={{maxWidth:300}}\r\n                            value={values.PriceSale}\r\n                            {...getFieldProps('PriceSale')}\r\n                            error={Boolean(touched.PriceSale && errors.PriceSale)}\r\n                            helperText={touched.PriceSale && errors.PriceSale}\r\n                        />\r\n                        <TextField\r\n                            fullWidth\r\n                            autoComplete='Amount'\r\n                            type='number'\r\n                            label='Amount'\r\n                            style={{maxWidth:300}}\r\n                            value={values.Amount}\r\n                            {...getFieldProps('Amount')}\r\n                            error={Boolean(touched.Amount && errors.Amount)}\r\n                            helperText={touched.Amount && errors.Amount}\r\n                        />\r\n                    </div>\r\n\r\n                    <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                        {renderCategory(values,getFieldProps)}\r\n                        {renderDvt(values,getFieldProps)}\r\n                        {renderWeight(values,getFieldProps)}\r\n                    </div>\r\n\r\n                    <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                        {renderRegion(values,getFieldProps)}\r\n                        {renderProvince(values,getFieldProps)}\r\n                    </div>\r\n\r\n                </Stack>\r\n\r\n                <LoadingButton\r\n                    fullWidth\r\n                    size='large'\r\n                    type='submit'\r\n                    variant='contained'\r\n                    loading={isSubmitting}\r\n                    style={{\r\n                        marginTop:30\r\n                    }}\r\n                >\r\n                    Submit\r\n                </LoadingButton>\r\n            </Form>\r\n        </FormikProvider>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}