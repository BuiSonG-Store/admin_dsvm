{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport { billApi } from '../../api/bill';\nimport addAxiosHeader from '../../utils/addAxiosHeader';\nconst initialState = {\n  pending: false,\n  success: false,\n  failed: false,\n  message: '',\n  data: [],\n  postData: []\n};\nconst headers = addAxiosHeader();\nexport const getBills = createAsyncThunk('bill', async () => {\n  const res = await billApi.getData();\n  return res.data.$values;\n});\nexport const editBill = createAsyncThunk('Edit Bill', async params => {\n  const res = await billApi.editBill(params, {\n    headers\n  });\n  return res.data;\n});\nexport const getBillById = createAsyncThunk('Get Bill By Id', async params => {\n  const res = await billApi.getBillById(params);\n  return res.data;\n});\nconst bills = createSlice({\n  name: 'bill',\n  initialState,\n  extraReducers: {\n    [getBills.pending]: state => {\n      state.pending = true;\n      state.success = false;\n      state.failed = false;\n    },\n    [getBills.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [getBills.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    },\n    [editBill.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [editBill.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    },\n    [getBillById.fulfilled]: (state, action) => {\n      state.pending = false;\n      state.success = true;\n      state.data = action.payload;\n    },\n    [getBillById.rejected]: (state, action) => {\n      state.pending = false;\n      state.failed = true;\n      state.message = action.error.message;\n    }\n  }\n});\nexport default bills.reducer;","map":{"version":3,"sources":["D:/DacSanVungMienVN/dacsanvungmien_frontent/src/store/slice/bill.js"],"names":["createAsyncThunk","createSlice","billApi","addAxiosHeader","initialState","pending","success","failed","message","data","postData","headers","getBills","res","getData","$values","editBill","params","getBillById","bills","name","extraReducers","state","fulfilled","action","payload","rejected","error","reducer"],"mappings":"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","sourcesContent":["import {createAsyncThunk, createSlice} from '@reduxjs/toolkit';\r\nimport {billApi}  from '../../api/bill';\r\nimport addAxiosHeader from '../../utils/addAxiosHeader';\r\n\r\n\r\nconst initialState = {\r\n    pending: false,\r\n    success: false,\r\n    failed: false,\r\n    message: '',\r\n    data: [],\r\n    postData:[]\r\n};\r\n\r\nconst headers=addAxiosHeader();\r\n\r\n\r\nexport const getBills= createAsyncThunk('bill', async () => {\r\n    const res = await billApi.getData();\r\n    return res.data.$values;\r\n});\r\n\r\nexport const editBill = createAsyncThunk('Edit Bill', async (params) => {\r\n    const res = await billApi.editBill(params,{headers});\r\n    return res.data;\r\n});\r\n\r\nexport const getBillById = createAsyncThunk('Get Bill By Id', async (params) => {\r\n    const res = await billApi.getBillById(params);\r\n    return res.data;\r\n});\r\n\r\n\r\nconst bills = createSlice({\r\n    name: 'bill',\r\n    initialState,\r\n    extraReducers: {\r\n        [getBills.pending]: (state) => {\r\n            state.pending = true;\r\n            state.success = false;\r\n            state.failed = false;\r\n        },\r\n        [getBills.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [getBills.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n\r\n        [editBill.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [editBill.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n        [getBillById.fulfilled]: (state, action) => {\r\n            state.pending = false;\r\n            state.success = true;\r\n            state.data = action.payload;\r\n        },\r\n        [getBillById.rejected]: (state, action) => {\r\n            state.pending = false;\r\n            state.failed = true;\r\n            state.message = action.error.message;\r\n        },\r\n    },\r\n});\r\n\r\nexport default bills.reducer;\r\n"]},"metadata":{},"sourceType":"module"}